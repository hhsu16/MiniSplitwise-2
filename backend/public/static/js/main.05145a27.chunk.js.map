{"version":3,"sources":["util/api.js","Components/Index/Index.jsx","Components/Navbar/Navbar.jsx","Components/Login/Login.jsx","Components/Signup/Signup.jsx","Components/Dashboard/Dashboard.jsx","Components/DashNavbar/DashNavbar.jsx","Components/DashPessoas/DashPessoas.jsx","Components/DashDespesas/Checkbox.jsx","Components/DashDespesas/DashDespesas.jsx","Components/DashAcertos/DashAcertos.jsx","Components/Modal/DeleteModal.jsx","Components/Modal/EditModal.jsx","Components/ReportsSummary/ReportsSummary.jsx","Components/ReportsBills/ReportsBills.jsx","Components/Reports/Reports.jsx","Components/App/App.jsx","serviceWorker.js","index.js"],"names":["auth","endpoint","process","login","username","password","axios","post","withCredentials","response","data","status","signup","isAuth","get","this","logout","groups","create","groupName","description","date","getAll","getOne","groupId","put","groupID","groupDataObj","delete","createExpense","expenseDataObj","putExpense","expenseID","deleteExpense","createSettle","settleDataObj","putSettle","settleID","deleteSettle","getBalance","console","log","getBills","Index","props","Navbar","handleChange","event","newInfoGroup","state","target","name","value","setState","handleSubmitNewGroup","preventDefault","addGroup","user","bind","prevProps","userInSession","authed","getUser","className","to","type","data-toggle","data-target","map","e","onClick","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","onChange","Component","Login","redirectToReferrer","handleFormSubmit","error","message","from","location","pathname","onSubmit","Signup","history","push","Dashboard","userGroups","renderModalDelete","renderModalEdit","class","_id","DashNavbar","ID","DashPessoas","selectedGroup","oneGroup","newMember","handleSubmit","str","replace","length","slice","addMember","required","members","sort","a","b","localeCompare","CheckBox","handleCheckChieldElement","checked","isChecked","for","DashDespesas","arr","handleAllChecked","newExpense","isDivideByAll","split","divideBy","forEach","member","doSomething","selectedMembers","document","getElementById","idx","indexOf","splice","paidBy","addExpense","group","expense","maxLength","min","max","step","placeholder","DashAcertos","settles","errorMessage","newSettle","paidTo","newSettleCopy","newErrorMessage","copyNewSettle","DeleteModal","whatIsMyPage","iAmInThisPage","removeGroup","element","removeMember","removeExpense","midleText","EditModal","editGroup","x","renderThis","ReportsSummary","msg","balances","then","qryObj","queryResult","catch","scope","qry","key","expensePaid","share","settlePaid","settleReceived","balance","ReportsBills","groupAllExpenses","Reports","href","aria-expanded","aria-controls","fakeExpense01","fakeExpense02","fakeSettle01","fakeSettle02","fakeMembers","fakeGroups","owner","App","deleteOneElement","elementID","thisPage","idOfGroupToRemove","newInfo","memberToRemove","groupCopy","idToRemove","test","newGroup","addSettle","fetchGroups","loggedInUser","userObj","fetchUser","exact","path","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05145a27.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const auth = {\n  endpoint: process.env.REACT_APP_API, // 'http://localhost:5000/api', //Dev\n\n  // TODO: não consegui buscar o erro do servidor. Se consologar a resposta do retorno sem resolver a promessa, eu vejo o erro... mas se tratar a promessa, não vejo mais o erro! tornei async e coloquei error handling pra conseguir detectar que o login falhou no componente login\n  async login(username, password) {\n    try {\n      const response = await axios.post(\n        `${this.endpoint}/login`,\n        {\n          username,\n          password,\n        },\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  async signup(username, password) {\n    try {\n      const response = await axios.post(\n        `${this.endpoint}/signup`,\n        {\n          username,\n          password,\n        },\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  isAuth() {\n    return axios.get(`${this.endpoint}/is-auth`, { withCredentials: true });\n  },\n\n  logout() {\n    return axios.get(`${this.endpoint}/logout`, { withCredentials: true });\n  },\n};\n\nexport const groups = {\n  endpoint: process.env.REACT_APP_API, // 'http://localhost:5000/api', //Dev\n\n  create(groupName, description, date) {\n    // User must be logged in\n    return axios.post(\n      `${this.endpoint}/groups`,\n      {\n        groupName,\n        description,\n        date,\n      },\n      { withCredentials: true }\n    );\n  },\n\n  // não testado\n  async getAll() {\n    try {\n      const response = await axios.get(\n        // User must be logged in\n        `${this.endpoint}/grupos`,\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  getOne(groupId) {\n    return axios.get(\n      // User must be logged in\n      `${this.endpoint}/grupos/${groupId}`,\n      { withCredentials: true }\n    );\n  },\n\n  put(groupID, groupDataObj) {\n    // groupData é o objeto contendo as modificações nos atributos do grupo\n    return axios.put(\n      // User must be logged in\n      `${this.endpoint}/grupos/${groupID}`,\n      groupDataObj, // Verificar modo de passar dados do grupo que serão modificados\n      { withCredentials: true }\n    );\n  },\n\n  delete(groupId) {\n    return axios.delete(\n      // User must be logged in\n      `${this.endpoint}/grupos/${groupId}`,\n      { withCredentials: true }\n    );\n  },\n\n  //EXPENSES\n  /*Example:\n\n      expenseData: {\n       \"description\": \"picanha\",\n        \"value\": 10,\n        \"split\": {\n          \"paidBy\": \"WonderWoman\",\n          \"dividedBy\": [\"WonderWoman\",\"Batman\", \"Aquaman\", \"Superman\"]\n        }\n      }\n    \n      */\n  createExpense(groupID, expenseDataObj) {\n    // User must be logged in\n    return axios.post(\n      `${this.endpoint}/groups/${groupID}/expenses`,\n      expenseDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  putExpense(groupID, expenseID, expenseDataObj) {\n    // User must be logged in\n    return axios.put(\n      `${this.endpoint}/groups/${groupID}/expenses/${expenseID}`,\n      expenseDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  deleteExpense(groupID, expenseID) {\n    // User must be logged in\n    return axios.delete(\n      `${this.endpoint}/groups/${groupID}/expenses/${expenseID}`,\n      { withCredentials: true }\n    );\n  },\n\n  //SETTLES\n  /*Model:\n      {\n        owner: { type: Schema.Types.ObjectId, ref: 'Group', required: true },\n        value: { type: Number, required: true },\n        paidBy: String,\n        paidTo: String,\n      },\n\n      Example: settleDataObj / JSON\n\n\n      {\n        \"value\": 40,\n        \"paidBy\": \"Superman\",\n        \"paidTo\": \"WonderWoman\"\n      }\n    \n      */\n  createSettle(groupID, settleDataObj) {\n    // User must be logged in\n    return axios.post(\n      `${this.endpoint}/groups/${groupID}/settles`,\n      settleDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  putSettle(groupID, settleID, settleDataObj) {\n    // User must be logged in\n    return axios.put(\n      `${this.endpoint}/groups/${groupID}/settles/${settleID}`,\n      settleDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  deleteSettle(groupID, settleID) {\n    // User must be logged in\n    return axios.delete(\n      `${this.endpoint}/groups/${groupID}/settles/${settleID}`,\n      { withCredentials: true }\n    );\n  },\n\n  //REPORTS\n  //API:\n  //http://localhost:5000/api/groups/5e39a5dcd92dfc45cc871308/balance\n\n  getBalance(groupId) {\n    console.log('getBalance of a group', groupId);\n    return axios.get(\n      //\n      `${this.endpoint}/groups/${groupId}/balance`,\n      { withCredentials: true }\n    );\n  },\n\n  getBills(groupId) {\n    console.log('getBills of a group', groupId);\n    return axios.get(\n      //\n      `${this.endpoint}/groups/${groupId}/historyExpenses`,\n      { withCredentials: true }\n    );\n  },\n\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../util/api'; // Importa componente de serviços de autenticação que conversam com a API\n\nexport default function Index(props) {\n  return (\n    <div>\n      <h1>Aquele título top</h1>\n      <p>Um textão bonito aqui pra chamar atenção</p>\n      <p>Outro texto, mas agora explicando como funciona</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Navbar.css\";\n\nimport { auth } from \"../../util/api\";\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isAuth: false,\n      groups: this.props.groups,\n      addGroup: this.props.addGroup,\n      newInfoGroup: {\n        groupName: \"\",\n        description: \"\",\n        date: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitNewGroup = this.handleSubmitNewGroup.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  handleChange = event => {\n    const newInfoGroup = { ...this.state.newInfoGroup };\n    const { name, value } = event.target;\n    newInfoGroup[name] = value;\n\n    this.setState({ newInfoGroup: newInfoGroup });\n  };\n  handleSubmitNewGroup = (event) => {\n    event.preventDefault();\n    const {newInfoGroup} = this.state;\n    newInfoGroup = this.state.newInfoGroup;\n\n\n    this.props.addGroup(newInfoGroup);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userInSession !== prevProps.userInSession) {\n      this.setState({\n        user: this.props.userInSession,\n        isAuth: this.props.authed,\n      });\n    }\n  }\n\n  async logout() {\n    try {\n      await auth.logout();\n      // Eu não poderia só atualizar o state do app?\n      this.setState({\n        user: null,\n        isAuth: false\n      });\n      this.props.getUser(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.isAuth ? (\n          <>\n            <nav className=\"navbar navbar-light bg-yellow justify-content-between\">\n              <div>\n                <Link className=\"navbar-brand\" to=\"/dashboard\">\n                  <strong>BANANA</strong>\n                  <em>SPLIT</em>\n                </Link>\n              </div>\n\n              <div className=\"dropdown ml-auto mr-3 btn btn-outline-dark dropdown-toggle\">\n                <button className=\"dropbtn\">Grupos</button>\n                <div className=\"dropdown-content\">\n                  <button\n                    className=\"btn btn-success dropdown-item bg-success text-white\"\n                    type=\"button\"\n                    data-toggle=\"modal\"\n                    data-target=\"#creategroupbutton\"\n                  >\n                    Criar Grupo\n                  </button>\n                  <hr className=\"py-0 my-1\" />\n                  {this.state.groups.map(e=> {\n                    return(\n                    <button className=\"dropdown-item px-1\" type=\"button\">\n                    {e.groupName}\n                  </button>\n                    )\n                  })}\n                </div>\n              </div>\n\n              <div>\n                <Link\n                  className=\"btn btn-outline-dark\"\n                  to=\"/\"\n                  onClick={this.logout}\n                >\n                  Sair\n                </Link>\n              </div>\n            </nav>\n\n            {/* // CREATE A GROUP MODAL */}\n\n            <div\n              className=\"modal fade\"\n              id=\"creategroupbutton\"\n              tabIndex=\"-1\"\n              role=\"dialog\"\n              aria-labelledby=\"exampleModalCenterTitle\"\n              aria-hidden=\"true\"\n            >\n              <div\n                className=\"modal-dialog modal-dialog-centered\"\n                role=\"document\"\n              >\n                <form className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">NOVO GRUPO</h5>\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      data-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </div>\n\n                  <div className=\"modal-body\">\n                    <div>\n                      <div className=\"form-group text-left \">\n                        <label htmlFor=\"groupName\" className=\"col-form-label\">\n                          Nome do grupo:\n                        </label>\n                        <input\n                          onChange={this.handleChange}\n                          type=\"text\"\n                          value={this.state.newInfoGroup.groupName}\n                          className=\"form-control\"\n                          id=\"groupName\"\n                          name=\"groupName\"\n                        />\n                        <label htmlFor=\"description\" className=\"col-form-label\">\n                          Descrição:\n                        </label>\n                        <input\n                          onChange={this.handleChange}\n                          type=\"text\"\n                          value={this.state.newInfoGroup.description}\n                          className=\"form-control\"\n                          id=\"description\"\n                          name=\"description\"\n                        />\n                        <label htmlFor=\"date\" className=\"col-form-label\">\n                          Data do evento:\n                        </label>\n                        <input\n                          onChange={this.handleChange}\n                          type=\"date\"\n                          value={this.state.newInfoGroup.date}\n                          className=\"form-control\"\n                          id=\"date\"\n                          name=\"date\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary\"\n                      data-dismiss=\"modal\"\n                    >\n                      Cancelar\n                    </button>\n                    <button onClick={this.handleSubmitNewGroup} type=\"submit\" className=\"btn btn-primary\">\n                      CRIAR\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </>\n        ) : (\n          <nav className=\"navbar navbar-light bg-yellow justify-content-between\">\n            <div>\n              <Link className=\"navbar-brand\" to=\"/\">\n                <strong>BANANA</strong>\n                <em>SPLIT</em>\n              </Link>\n            </div>\n            <div>\n              <Link className=\"btn btn-outline-dark mr-3\" to=\"/login\">\n                Entre\n              </Link>\n              <Link className=\"btn btn-outline-dark\" to=\"/signup\">\n                Cadastre-se\n              </Link>\n            </div>\n          </nav>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { auth } from '../../util/api';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToReferrer: false,\n      username: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  async handleFormSubmit(event) {\n    event.preventDefault();\n    const { username, password } = this.state;\n    try {\n      const { data, status } = await auth.login(username, password);\n      console.log(\n        'data: ', data,\n        'status: ', status, \n      )\n      if (status !== 200) {\n        this.setState({\n          error: data.message,\n          username: '',\n          password: '',\n        });\n        return;\n      }\n      this.props.getUser(data);\n      this.setState({\n        redirectToReferrer: true,\n        error: false,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    // no sucesso, redireciona de onde ele veio ou leva ele de volta para login\n    // TODO: conferir redirect\n    const { from } = this.props.location.state || {\n      from: { pathname: '/dashboard' },\n    };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div>\n        <div\n        // className=\"modal fade\"\n        // id=\"loginbutton\"\n        // tabIndex=\"-1\"\n        // role=\"dialog\"\n        // aria-labelledby=\"exampleModalCenterTitle\"\n        // aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              {/* Esse header talvez precise loadar contextualmente */}\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Login</h5>\n                {/* botão de fechar deixa de fazer sentido */}\n                {/* <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button> */}\n              </div>\n              <div className=\"modal-body\">\n                <br />\n                {this.state.error && this.state.error}\n                <form onSubmit={this.handleFormSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"recipient-user\" className=\"col-form-label\">\n                      Usuário:\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"recipient-user\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label\n                      htmlFor=\"recipient-password\"\n                      className=\"col-form-label\"\n                    >\n                      Senha:\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"recipient-password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-dismiss=\"modal\"\n                  >\n                    Cancelar\n                  </button>\n                  <input\n                    type=\"submit\"\n                    value=\"Entrar\"\n                    className=\"btn btn-primary\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { auth } from '../../util/api';\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  async handleFormSubmit(event) {\n    event.preventDefault();\n    const { username, password } = this.state;\n    try {\n      const { data, status } = await auth.signup(username, password);\n      console.log(\n        'data: ', data,\n        'status: ', status, \n      )\n      if (status !== 200) {\n        this.setState({\n          error: data.message,\n          username: '',\n          password: '',\n        });\n        return;\n      } else {\n        this.props.getUser(data);\n        this.props.history.push(\"/dashboard\");\n        this.setState({\n          error: false,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    return (\n      <div\n      // className=\"modal fade\"\n      // id=\"signupbutton\"\n      // tabIndex=\"-1\"\n      // role=\"dialog\"\n      // aria-labelledby=\"exampleModalCenterTitle\"\n      // aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Signup</h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n                <br />\n                  {this.state.error && this.state.error}\n            <div className=\"modal-body\">\n              <form onSubmit={this.handleFormSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"recipient-usuario\" className=\"col-form-label\">\n                    Usuário:\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"recipient-usuario\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"recipient-password\"\n                    className=\"col-form-label\"\n                  >\n                    Senha:\n                  </label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"recipient-password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"modal-footer\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-dismiss=\"modal\"\n                  >\n                    Cancelar\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Criar\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n\n<div\n          // className=\"modal fade\"\n          // id=\"signupbutton\"\n          // tabIndex=\"-1\"\n          // role=\"dialog\"\n          // aria-labelledby=\"exampleModalCenterTitle\"\n          // aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Dados para cadastro</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form onSubmit={this.handleSignUpFormSubmit}>\n                  <div className=\"form-group\">\n                    <label\n                      htmlFor=\"recipient-usuario\"\n                      className=\"col-form-label\"\n                    >\n                      Usuário:\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"recipient-usuario\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label\n                      htmlFor=\"recipient-password\"\n                      className=\"col-form-label\"\n                    >\n                      Senha:\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"recipient-password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary\"\n                      data-dismiss=\"modal\"\n                    >\n                      Cancelar\n                    </button>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      CRIAR\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n*/\n","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"./Dashboard.css\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userGroups: this.props.data.groups,\n      renderModalDelete: this.props.renderModalDelete,\n      renderModalEdit: this.props.renderModalEdit,\n    };\n  }\n  render() {\n    return (\n      <>\n        <h1>OLHA ESSE H1</h1>\n        <article>Estes são os seus grupos:</article>\n        <br />\n\n        {this.state.userGroups.map(e => {\n          return (\n            <>\n              <hr />\n              <div className=\"row m-1 d-flex justify-content-center\">\n                <div class=\"col-md-7 d-flex flex-column mt-1\">\n                  <button class=\"btn btn-outline-secondary \">\n                    {e.groupName} - {e.description}\n                  </button>\n                </div>\n                <div class=\"col-md-4 p-0 ml-1 d-flex flex-row justify-content-center mt-1\">\n                  <button class=\"btn btn-secondary mr-1\">Relatório</button>\n                  <button\n                    data-toggle=\"modal\"\n                    data-target={`#editButton${e._id}`}\n                    class=\"btn btn-warning mr-1\"\n                  >\n                    {console.log(e._id)}\n                    Editar\n                  </button>\n                  <button\n                    data-toggle=\"modal\"\n                    data-target={`#deleteButton${e._id}`}\n                    class=\"btn btn-danger\"\n                  >\n                    Excluir\n                  </button>\n                </div>\n              </div>\n              {this.props.renderModalDelete(e.groupName, e._id, \"dashboard\")}\n              {this.props.renderModalEdit(e, \"dashboard\")}\n            </>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"../Navbar/Navbar\";\n\nclass DashNavbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ID: this.props.ID,\n      groupName: this.props.groupName,\n      description: this.props.description\n    }\n  }\n  render(){\n    return(\n\n      <>\n        <Navbar />\n    <h2>Grupo: {this.props.groupName}</h2>    {console.log(this.props.groupName)}\n      \n        <div className=\"dashContent row py-0 my-2\">\n          <div\n            className=\"btn-group btn-group-toggle mx-auto my-0\"\n            data-toggle=\"buttons\"\n          >\n            <NavLink\n              to=\"/dashboard/pessoas\"\n              className=\"btn btn-outline-secondary btn-yellow-dashboard\"\n            >\n              <input type=\"radio\" name=\"options\" id=\"dashPessoas\" />\n              Pessoas\n            </NavLink>\n  \n            <NavLink\n              to=\"/dashboard/despesas\"\n              className=\"btn btn-outline-secondary btn-yellow-dashboard\"\n            >\n              <input type=\"radio\" name=\"options\" id=\"dashDespesas\" />\n              Despesas\n            </NavLink>\n  \n            <NavLink\n              to=\"/dashboard/acertos\"\n              className=\"btn btn-outline-secondary btn-yellow-dashboard\"\n            >\n              <input type=\"radio\" name=\"options\" id=\"dashAcertos\" />\n              Acertos\n            </NavLink>\n          </div>\n        </div>\n        <hr className=\"my-2\" />\n      </>\n    );\n  };\n}\n\nexport default DashNavbar;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport DashNavbar from \"../DashNavbar/DashNavbar\";\n\nclass DashPessoas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedGroup: this.props.oneGroup,\n      newMember: \" \",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.props.addMember = this.props.addMember.bind(this);\n  }\n  handleChange(event) {\n    const { value } = event.target;\n    this.setState({newMember: value});\n    //teste\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    let str = this.state.newMember;\n    str = str.replace(/\\s{2,}/g, ' ');\n    console.log(str.length);\n    if(str === \" \"){\n      return;\n    } if (str[0] === \" \") {\n      str.slice(0,1);\n      this.props.addMember(str);\n    } else {\n      this.props.addMember(str);\n    }\n    this.setState({\n      newMember: \" \",\n    })\n  }\n  \n  \n  render() {\n    console.log(this.props)\n    return (\n      <>\n        <DashNavbar />\n        <div className=\"dashMainContent mx-4\">\n          <h2>Adicionar pessoa:</h2>\n          <form onSubmit={this.handleSubmit} className=\"dashAddBills d-flex justify-content-between align-items-end flex-wrap\">\n            <div className=\"form-group text-left col-lg-4 mt-1 mb-0 p-0\">\n              Nome:\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"newMemberName\"\n                name=\"name\"\n                value={this.state.newMember}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            {/* <div className=\"form-group text-left col-lg-5 mb-0 mt-1 p-0\">\n              Contato:\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"newMemberContact\"\n                name=\"contact\"\n                value={this.state.newMember.contact}\n                placeholder={\"E-mail ou Telefone para contato\"}\n                onChange={this.handleChange}\n              />\n            </div> */}\n            <button type=\"submit\" value=\"submit\" className=\"btn btn-warning mt-2 col-lg-2\" >\n              Submit\n            </button>\n          </form>\n          <hr />\n\n          <div className=\"dashBillsList\">\n            <div className=\"row\">\n              {this.state.selectedGroup.members.sort((a,b) => a.localeCompare(b)).map(e => {\n                return (\n                  <>\n                    <div className=\"col-lg-6 p-0 my-1\">\n                      <button className=\"btn btn-outline-secondary col-10\">\n                        {e}\n                      </button>{\" \"}\n                      <button\n                        className=\"btn btn-danger col-1\"\n                        onClick={() => this.props.renderModalDelete(e, e)}\n                        type=\"button\"\n                        data-toggle=\"modal\"\n                        data=\"teste\"\n                        data-target={`#deleteButton${e}`}\n                      >\n                        {\" \"}\n                        X{\" \"}\n                      </button>\n                      {this.props.renderModalDelete(e, e,\"member\")}\n                    </div>\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DashPessoas;\n","import React from \"react\";\n\nexport const CheckBox = props => {\n  // {props.doSomething(props.isChecked)}\n  return (\n    <li className=\"d-flex mx-auto dropdown-item \">\n      <input\n        className=\"mx=auto my-auto\"\n        // key=\"split\"\n        id={props.name}\n        onClick={props.handleCheckChieldElement}\n        type=\"checkbox\"\n        checked={props.isChecked}\n        name=\"divideBy\"\n        value={props.name}\n        onChange={props.handleChange}\n        />\n      <label\n        className=\"dropdown-item mx-0 my-0 bg-transparent\"\n        for={props.name}\n      >\n        {props.name}\n      </label>\n    </li>\n  );\n};\n\nexport default CheckBox;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DashNavbar from \"../DashNavbar/DashNavbar\";\nimport CheckBox from \"./Checkbox\";\nimport \"./DashDespesas.css\"\n\nconst membersToArr = (arr) =>{\n  return arr.map(e=>{\n    let memberObj = {name: e};\n    return memberObj\n  });\n}\n\nclass DashDespesas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      group: this.props.oneGroup,\n      members: membersToArr(this.props.oneGroup.members),\n      expense: this.props.oneGroup.expense,\n      selectedMembers: [],\n      newExpense:{\n        ID: \"Aleatorio\",\n        group: this.props.oneGroup._id,\n        description: '',\n        value: 0,\n        split: {\n          paidBy: '',\n          divideBy: [],\n          isDivideByAll: false,\n        }\n      }\n    };\n  }\n  handleAllChecked = event => {\n    const newExpense = {...this.state.newExpense};\n    let isDivideByAll = \"Error\";\n    (event.target.checked) ? isDivideByAll = true : isDivideByAll = false;\n    newExpense.split.isDivideByAll = isDivideByAll;\n    \n    newExpense.split.divideBy = [];\n\n    let members = [...this.state.members];\n    members.map(e => (event.target.checked) ? newExpense.split.divideBy.push(e.name) : newExpense.split.divideBy)\n    members.forEach(member => (member.isChecked = event.target.checked));\n    this.setState({ newExpense: newExpense }, () => console.log(\"TESTE\",this.state.newExpense.split.divideBy));\n\n  };\n  doSomething = (e) => {\n    console.log(\"something is happening\",e);\n  };\n  handleCheckChieldElement = event => {\n    const { newExpense } = this.state;\n    let members = [...this.state.members];\n    \n    let selectedMembers = [...this.state.selectedMembers];\n\n    \n    members.map(member => {\n      if (member.name === event.target.value) {\n        member.isChecked = event.target.checked;\n        \n        if (!event.target.checked) {\n          document.getElementById(\"isDivideByAll\").checked = false;\n          newExpense.split.isDivideByAll = false;\n          let idx = selectedMembers.indexOf(member.name);\n          selectedMembers.splice(idx,1);\n          \n        } else if (event.target.checked) {\n          document.getElementById(\"isDivideByAll\").checked = true;\n          let it = 0\n          members.map(e=>{(!e.isChecked) ? document.getElementById(\"isDivideByAll\").checked = false: it = 1})\n          selectedMembers.push(member.name)\n        }\n      }\n      newExpense.split.isDivideByAll = document.getElementById(\"isDivideByAll\").checked;\n    });    \n    this.setState({ members: members , selectedMembers: selectedMembers , newExpense: newExpense });\n  };\n  handleChange = (event) => {\n    const newExpense = {...this.state.newExpense};\n    const { name, value } = event.target;\n    \n    switch (name) {\n      case \"paidBy\":\n        newExpense.split.paidBy = value;\n        break;\n      case \"divideBy\":\n        newExpense.split.divideBy = value;\n        break;\n      case \"value\":\n        newExpense.value = value;\n        break;\n      case \"description\":\n        newExpense.description = value;\n        break;\n      default:\n        break;\n    }\n    this.setState({newExpense: newExpense});\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {newExpense} = this.state;\n    newExpense.split.divideBy = this.state.selectedMembers;\n\n\n    this.props.addExpense(newExpense);\n    this.setState({ newExpense: newExpense });\n  }\n\n  render() {\n    return (\n      <>\n        <DashNavbar />\n\n        <div className=\"dashMainContent mx-2 p-0\">\n          {/* <!-- Add bills --> */}\n          <h2>Adicionar nova despesa:</h2>\n          <form onSubmit={this.handleSubmit} className=\"dashAddBills d-flex justify-content-between align-items-end flex-wrap\">\n            <div className=\"form-group text-left col-xl-3 m-1 mb-0 p-0\">\n              Descrição:\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                maxLength=\"25\"\n                name=\"description\"\n                onChange={this.handleChange}\n                value={this.state.newExpense.description}\n              />\n            </div>\n            <div className=\"form-group text-left col-xl-2 m-1 mb-0 p-0\">\n              Pagou:\n              <select className=\"form-control\" name=\"paidBy\" onChange={this.handleChange}>\n                <option>Selecione um membro</option>\n                {[...this.state.members].sort((a,b)=>a.name.localeCompare(b.name)).map(member => {\n                  return (\n                  <option>{member.name}</option>\n                  )\n                })}\n              </select>\n            </div>\n            <div className=\"form-group text-left col-xl-2 mb-0 m-1 p-0\">\n              Valor:\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                min=\"0.00\"\n                max=\"10000.00\"\n                step=\"0.01\"\n                id=\"value\"\n                placeholder=\"R$ 10,00\"\n                onChange={this.handleChange}\n                name=\"value\"\n              />\n            </div>\n\n            <div className=\"form-group text-left col-xl-2 mb-0 m-1 p-0\">\n              Dividir Por:\n              <div className=\"btn btn-outline-secondary dropdown dropdown-toggle form-control\">\n                Selecione os membros\n                <div className=\"dropdown-content form-group\">\n                  <div className=\"dropdown-item d-flex form-group\">\n                    <input\n                      className=\"dropdown-item mx-0 my-auto bg-transparent\"\n                      type=\"checkbox\"\n                      onChange={this.handleChange}\n                      onClick={this.handleAllChecked}\n                      id=\"isDivideByAll\"\n                      name=\"isDivideByAll\"\n                    />\n                    <label\n                      className=\"dropdown-item py-2 my-0 bg-transparent\"\n                      htmlFor=\"isDivideByAll\"\n                    >\n                      Todos\n                    </label>\n                  </div>\n                  <ul>\n                    {[...this.state.members].map(member => {\n                      return (\n                        <CheckBox\n                          handleCheckChieldElement={this.handleCheckChieldElement}\n                          handleChange={this.handleChange}\n                          doSomething={this.doSomething}\n                          {...member}\n                        />\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-warning mb-1 col-xl-1\">\n              Submit\n            </button>\n          </form>\n          <hr />\n          \n          \n          {/* <!-- Bills list --> */}\n          <div className=\"dashBillsList m-1\">\n            <div className=\"row m-0\">\n              {\n              [...this.state.expense].map(e => {\n                return(\n              <div className=\"col-lg-5 p-0 m-1 mx-auto dashComponents\">\n                <div className=\"col-9 p-0\">\n                  <button className=\"btn btn-outline-secondary boxComponent\">\n                    {e.description} \n                  </button>\n                </div>\n                <div className=\"col-2 p-0\">\n                  <button\n                    className=\"btn btn-warning buttonOptions\"\n                    type=\"button\"\n                    data-toggle=\"modal\"\n                    data-target={`#deleteButton${e.id}`}\n                    >\n                      Editar  \n                  </button>\n                  <button\n                    className=\"btn btn-danger buttonOptions\"\n                    type=\"button\"\n                    data-toggle=\"modal\"\n                    data-target={`#deleteButton${e.ID}`}\n                    >\n                    Excluir\n                  </button>\n                </div>\n                {this.props.renderModalDelete(e.description, e.ID,\"expense\")}\n              </div>\n                )\n              })\n            }\n            </div>     \n\n\n\n\n            </div>\n          </div>\n\n      </>\n    );\n  }\n}\n\nexport default DashDespesas;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DashNavbar from \"../DashNavbar/DashNavbar\";\nimport \"./DashAcertos.css\"\n\nclass DashAcertos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      group: this.props.oneGroup,\n      members: this.props.oneGroup.members,\n      settles: this.props.oneGroup.settles,\n      renderModalDelete: this.props.renderModalDelete,\n      errorMessage: \"\",\n      newSettle: {\n        _id: \"ID\",\n        group: \"this.state.group.ID\",\n        value: 0,\n        paidBy: \"\",\n        paidTo: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    let newErrorMessage = \"\";\n    const { name, value } = event.target;\n    const newSettleCopy = { ...this.state.newSettle };\n    newSettleCopy[name] = value;\n    newSettleCopy.group = this.state.group.ID;\n    newSettleCopy.value = +(newSettleCopy.value);\n\n    this.setState({ newSettle: newSettleCopy, errorMessage: newErrorMessage });\n  }\n  handleSubmit(event) {\n    let newErrorMessage = \"\";\n    if ( (this.state.newSettle.paidBy === \"\") || (this.state.newSettle.paidTo === \"\") ) {\n      event.preventDefault();\n      newErrorMessage = \"Por favor, preencha todos os dados\";\n    } else if (this.state.newSettle.paidBy === this.state.newSettle.paidTo) {\n      event.preventDefault();\n      newErrorMessage = \"Não é possível pagar a si mesmo\";\n    } else {\n      //TODO this.props.addSettle(this.state.newSettle);\n      const copyNewSettle = { ...this.state.newSettle };\n      // const { newSettle } = this.state;\n      copyNewSettle.value = 0;\n      copyNewSettle.paidBy = \"\";\n      copyNewSettle.paidTo = \"\";\n      this.setState({ newSettle: copyNewSettle });\n    }\n    this.setState({ errorMessage: newErrorMessage });\n  }\n  render() {\n    return (\n      <>\n        <DashNavbar />\n        \n        <div className=\"dashMainContent\">\n          {/* <!-- Add Settle --> */}\n          <h2>Adicionar novo acerto:</h2>\n          <form className=\"dashAddBills d-flex justify-content-between align-items-end flex-wrap px-4\">\n            <div className=\"form-group text-left col-lg-3 mt-1 mb-0 p-0\">\n              Pagou:\n              <select\n                onChange={this.handleChange}\n                name=\"paidBy\"\n                className=\"form-control\"\n                required\n              >\n                <option value=\"\">Selecione um nome</option>\n                {[...this.state.members]\n                  .sort((a, b) => a.localeCompare(b))\n                  .map(member => {\n                    return <option value={member}>{member}</option>;\n                  })}\n              </select>\n            </div>\n            <div className=\"form-group text-left col-lg-3 mb-0 mt-1 p-0\">\n              Recebeu:\n              <select\n                onChange={this.handleChange}\n                name=\"paidTo\"\n                className=\"form-control\"\n                required\n              >\n                <option value=\"\">Selecione um nome</option>\n                {[...this.state.members]\n                  .sort((a, b) => a.localeCompare(b))\n                  .map(member => {\n                    return <option value={member}>{member}</option>;\n                  })}\n              </select>\n            </div>\n            <div className=\"form-group text-left col-lg-2 mb-0 mt-1 p-0\">\n              Valor:\n              <input\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"value\"\n                className=\"form-control\"\n                min=\"0.00\"\n                max=\"10000.00\"\n                step=\"0.01\"\n                id=\"acertoValor\"\n                placeholder=\"R$ 10,00\"\n                required\n              />\n            </div>\n            <button\n              onClick={this.handleSubmit}\n              type=\"submit\"\n              className=\"btn btn-warning mt-2 col-lg-2\"\n            >\n              Submit\n            </button>\n          </form>\n            <div className=\"zindex-modal alert alert-warning bg-transparent m-2 py-auto px-auto noBorder\" role=\"alert\">\n              {this.state.errorMessage}\n            </div>\n          <hr />\n\n          <div className=\"dashSettleList row\">\n            {[...this.state.settles].map(e => {\n              return (      \n                <div className=\"col-lg p-0 ml-0 dashComponents\">\n                  <div className=\"col-9 p-0\">\n                    <button className=\"btn btn-outline-secondary boxComponent\">\n                      {e.paidBy} pagou para {e.paidTo} o valor de R${e.value}\n                    </button>\n                  </div>\n                  <div className=\"col-2 p-0\">\n                    <button\n                      className=\"btn btn-warning buttonOptions\"\n                      type=\"button\"\n                      data-toggle=\"modal\"\n                      data-target={`#deleteButton${e.id}`}\n                      >\n                        Editar  \n                    </button>\n                    <button\n                      className=\"btn btn-danger buttonOptions\"\n                      type=\"button\"\n                      data-toggle=\"modal\"\n                      data-target={`#deleteButton${e.id}`}\n                      >\n                      Excluir\n                    </button>\n                    {this.props.renderModalDelete(\n                      `O pagamento de ${e.paidBy} para ${e.paidTo}`,\n                      e\n                    )}\n                  </div>\n                </div>\n              )})}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DashAcertos;\n","import React, { Component } from \"react\";\n\nclass DeleteModal extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      midleText: this.props.midleText,\n      element: this.props.element,\n      member: this.props.element,\n      removeGroup:this.props.removeGroup,\n      removeMember:this.props.removeMember,\n      removeExpense:this.props.removeExpense,\n      iAmInThisPage:this.props.iAmInThisPage,\n    }\n  }\n  whatIsMyPage = (iAmInThisPage) => {\n    switch (iAmInThisPage) {\n      case \"dashboard\":\n        this.state.removeGroup(this.state.element)\n        break;\n      case \"member\":\n        this.state.removeMember(this.state.element)\n        break;\n      case \"expense\":\n        this.state.removeExpense(this.state.element.ID)\n        break;\n      case \"settle\":\n        console.log(\"Error\");\n        break;\n      default:\n          console.log(\"Delete mode is not defined\");\n        break;\n    }\n\n  }\n  render(){\n    return (\n      <>\n      {/* // CONFIRM EXCLUSION MODAL */}\n      <div className=\"modal fade\" id={`deleteButton${this.state.element}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Deseja realmente remover?</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"recipient\" className=\"col-form-label\">\n                    {this.state.midleText}\n                  </label>\n                </div>\n              </form>\n            </div>\n\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">\n                {\" \"}Cancelar{\" \"}\n              </button>\n              <button onClick={() => this.whatIsMyPage(this.state.iAmInThisPage)} data-dismiss=\"modal\" type=\"button\" className=\"btn btn-danger\">\n                {\"\"}Excluir{\" \"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )};\n};\n\nexport default DeleteModal;\n","import React, { Component } from \"react\";\n\nclass EditModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      iAmInThisPage: this.props.iAmInThisPage,\n      element: this.props.element,\n      editGroup: this.props.editGroup, //(idOfGroupToRemove, info)\n      newInfoGroup: {\n        groupName: this.props.element.groupName,\n        description: this.props.element.description,\n        date: this.props.element.date,\n      }\n    };\n    this.handleChange=this.handleChange.bind(this);\n  }\n  handleChange = (event) => {\n    const newInfoGroup = {...this.state.newInfoGroup};\n    const { name, value } = event.target;\n    newInfoGroup[name] = value;\n    \n    this.setState({newInfoGroup: newInfoGroup});\n  };\n  whatIsMyPage = iAmInThisPage => {\n    switch (iAmInThisPage) {\n      case \"dashboard\":\n        this.state.editGroup(this.state.element._id, this.state.newInfoGroup)\n\n        break;\n      case \"member\":\n        this.state.removeMember(this.state.element);\n        break;\n      case \"expense\":\n        this.state.removeExpense(this.state.element.ID);\n        break;\n      case \"settle\":\n        console.log(\"Error\");\n        break;\n      default:\n        console.log(\"Delete mode is not defined\");\n        break;\n    }\n  };\n  renderThis(x) {\n    switch (x) {\n      case \"dashboard\":\n        return (\n          <div className=\"modal-body\">\n            <form>\n              <div className=\"form-group text-left \">\n                <label htmlFor=\"groupName\" className=\"col-form-label\">\n                  Nome do grupo:\n                </label>\n                <input onChange={this.handleChange} type=\"text\" value={this.state.newInfoGroup.groupName} className=\"form-control\" id=\"groupName\" name=\"groupName\" />\n                <label htmlFor=\"description\" className=\"col-form-label\">\n                  Descrição:\n                </label>\n                <input onChange={this.handleChange} type=\"text\" value={this.state.newInfoGroup.description} className=\"form-control\" id=\"description\" name=\"description\" />\n                <label htmlFor=\"date\" className=\"col-form-label\">\n                  Data do evento:\n                </label>\n                <input onChange={this.handleChange} type=\"date\" value={this.state.newInfoGroup.date} className=\"form-control\" id=\"date\" name=\"date\"/>\n              </div>\n            </form>\n          </div>\n        );\n\n        break;\n\n      default:\n        break;\n    }\n  }\n  render() {\n    return (\n      <>\n        <div\n          className=\"modal fade\"\n          id={`editButton${this.state.element._id}`}\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalCenterTitle\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Insira os dados para editar</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n\n              {this.renderThis(this.state.iAmInThisPage)}\n\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                >\n                  {\" \"}\n                  Cancelar{\" \"}\n                </button>\n                <button\n                  onClick={() => this.whatIsMyPage(this.state.iAmInThisPage)}\n                  data-dismiss=\"modal\"\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                >\n                  {\"\"}Editar{\" \"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EditModal;\n","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport {groups} from '../../util/api'       // Groups component from API service \n\nclass ReportsSummary extends Component {\n    constructor(props){\n        super(props);\n        this.state = {msg:'', balances: []};\n\n    }\n\n    componentDidMount() {\n        groups.getBalance(this.props.groupId) //props do Id do grupo; \n        .then(qryObj => {\n            console.log('componentDidMount',qryObj);\n            this.setState({msg: qryObj.data.msg, balances:qryObj.data.queryResult}, () => console.log(this.state) )\n\n        })\n        .catch(error => console.log('erro ReportSummary', error))\n\n    }\n\n\n    render(){\n                \n        if (this.state.balances) {//Conditional return \n            return(\n            <div>\n         \n                <p>\n                    Resumo de contas por participante:\n                </p>\n                \n                <div className=\"resultTable\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Integrante</th>\n                                <th scope=\"col\">Gastou</th>\n                                <th scope=\"col\">Consumiu</th>\n                                <th scope=\"col\">Pagou</th>\n                                <th scope=\"col\">Recebeu</th>\n                                <th scope=\"col\">Saldo</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n            \n                            {/* Map que recebe os registros da API e cria uma row de tabela - vide exemplo abaixo */}\n                            {this.state.balances.map((qry, idx) => {\n                                return (\n                                    <tr key={idx} >    \n                                        <td>{qry.member}</td>\n                                        <td>{qry.expensePaid}</td>\n                                        <td>{qry.share}</td>\n                                        <td>{qry.settlePaid}</td>\n                                        <td>{qry.settleReceived}</td>\n                                        <td>{qry.balance}</td>\n                                    </tr>\n                                )\n                            })}\n    \n                        </tbody>\n                    </table>\n                </div>\n                <br/>\n                <hr/>\n                <br/>\n            \n             \n            </div>\n            )\n        } else { //Conditional return FALSE\n            return(\n                <div>\n                    <h1>Carregando...</h1>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ReportsSummary","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport {groups} from '../../util/api'       // Groups component from API service \n\nclass ReportsBills extends Component {\n    constructor(props){\n        super(props);\n        this.state = {message:'', groupAllExpenses: []};\n\n    }\n\n    componentDidMount() {\n        groups.getBills(this.props.groupId) //props do Id do grupo; \n        .then(qryObj => {\n            console.log('componentDidMount',qryObj);\n            this.setState({msg: qryObj.data.msg, groupAllExpenses:qryObj.data.queryResult}, () => console.log(this.state) )\n\n        })\n        .catch(error => console.log('erro ReportBills', error))\n\n    }\n\n\n    render(){\n                \n        if (this.state.groupAllExpenses) {//Conditional return \n            return(\n            <div>\n         \n                <p>\n                    Todos os gastos do grupo:\n                </p>\n                \n                <div className=\"resultTable\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Integrante</th>\n                                <th scope=\"col\">Descrição</th>\n                                <th scope=\"col\">Valor</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n            \n                            {/* Map que recebe os registros da API e cria uma row de tabela - vide exemplo abaixo */}\n                            {this.state.groupAllExpenses.map((qry, idx) => {\n                                return (\n                                    <tr key={idx} >    \n                                        <td>{qry.split.paidBy}</td>\n                                        <td>{qry.description}</td>\n                                        <td>{qry.value}</td>\n                                    </tr>\n                                )\n                            })}\n    \n                        </tbody>\n                    </table>\n                </div>\n                <br/>\n                <hr/>\n                <br/>\n            \n                \n            </div>\n            )\n        } else { //Conditional return FALSE\n            return(\n                <div>\n                    <h1>Carregando...</h1>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ReportsBills","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport {auth} from '../../util/api';  // Importa componente de serviços de autenticação que conversam com a API\nimport ReportsSummary from '../ReportsSummary/ReportsSummary';\nimport ReportsBills from '../ReportsBills/ReportsBills';\n\n\nconst Reports = props => {\n    return(\n        <div>\n        {/* Navbar */}\n            <nav className=\"navbar navbar-light bg-yellow justify-content-between\">\n                <div>\n                    <Link\n                    className=\"navbar-brand\" to=\"/\"><strong>BANANA</strong><em>SPLIT</em></Link>\n                </div>\n                <div>\n                    <Link to=\"/\">\n                        <button type=\"button\" className=\"btn btn-outline-secondary mr-3\" data-toggle=\"modal\" data-target=\"#loginbutton\">\n                            Início\n                        </button>\n                    </Link>\n                </div>\n            </nav>\n\n            <div>\n                <h1> Relatório individual </h1>\n                <div>\n                    {/* Para testar o componente ReportsSummary, passar algum 'groupId' na prop abaixo  */}\n                    <ReportsSummary groupId={'5e39a5dcd92dfc45cc871308'}/>\n                </div>\n\n                <hr/>\n\n                <h1> Todas as contas </h1>\n                <div>\n                    {/* Para testar o componente ReportsSummary, passar algum 'groupId' na prop abaixo  */}\n                    <ReportsBills groupId={'5e39a5dcd92dfc45cc871308'}/>\n                </div>\n\n            </div>\n            <p>\n                <Link className=\"\" data-toggle=\"collapse\" href=\"/\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                    Crie seu próprio grupo!\n                </Link>\n            </p>\n        </div>\n    )\n};\n\n\nexport default Reports;\n","import React, { Component } from 'react';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { auth } from '../../util/api';\nimport { groups } from '../../util/api';\n// Components\nimport Index from '../Index/Index'; // isso precisa morrer\nimport Navbar from '../Navbar/Navbar';\n\nimport Login from '../Login/Login';\nimport Signup from '../Signup/Signup';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Pessoas from '../DashPessoas/DashPessoas';\nimport Despesas from '../DashDespesas/DashDespesas';\nimport Acertos from '../DashAcertos/DashAcertos';\nimport DeleteModal from '../Modal/DeleteModal';\nimport EditModal from '../Modal/EditModal';\nimport PrivateRoute from '../PrivateRoute/PrivateRoute';\nimport Reports from '../Reports/Reports';\n\n// fake data\nconst fakeExpense01 = {\n  ID: 21,\n  group: '000',\n  description: 'ABC EXPENSE',\n  value: 1000,\n  split: {\n    paidBy: 'FULANO',\n    divideBy: ['CICLANO-01', 'CICLANO-02'],\n  },\n};\nconst fakeExpense02 = {\n  ID: 25,\n  group: '000',\n  description: 'ABC EXPENSE 0002',\n  value: 1000,\n  split: {\n    paidBy: 'FULANO 02',\n    divideBy: ['CICLANO-01', 'CICLANO-02'],\n  },\n};\nconst fakeSettle01 = {\n  ID: 31,\n  group: 'GROUP ID',\n  value: 200,\n  paidBy: 'PAGOU',\n  paidTo: 'QUEM RECEBEU 02',\n};\nconst fakeSettle02 = {\n  ID: 32,\n  group: 'GROUP ID',\n  value: 300,\n  paidBy: 'PAGOU',\n  paidTo: 'QUEM RECEBEU 03',\n};\nconst fakeMembers = ['Fulano', 'Ciclano', 'Barbosa'];\nconst fakeGroups = [\n  {\n    _id: '11',\n    groupName: 'GRUPO 001',\n    description: 'bla bla bla grupo',\n    owner: 200,\n    members: fakeMembers,\n    expense: [fakeExpense01, fakeExpense02],\n    settles: [fakeSettle01, fakeSettle02],\n  },\n  {\n    _id: '12',\n    groupName: 'GRUPO 002',\n    description: 'lalala',\n    owner: 200,\n    members: fakeMembers, //STRING\n    expense: [fakeExpense02, fakeExpense01],\n    settles: [fakeSettle02, fakeSettle01],\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isAuth: false,\n      groups: fakeGroups,\n      selectedGroup: fakeGroups[0],\n    };\n    // this.addMember = this.addMember.bind(this); ===> PRECISA???\n    // this.addExpense = this.addExpense.bind(this);\n    // this.addSettle = this.addSettle.bind(this);\n    this.renderModalDelete = this.renderModalDelete.bind(this); //TODOS OS DELETES ESTAO AQUI\n    this.getUser = this.getUser.bind(this);\n    this.fetchGroups = this.fetchGroups.bind(this);\n  }\n\n  async fetchUser() {\n    if (this.state.isAuth === false) {\n      try {\n        const loggedInUser = await auth.isAuth();\n        this.setState({\n          user: loggedInUser,\n          isAuth: true,\n        });\n      } catch (error) {\n        console.log(error);\n        // this.setState({\n        //   user: null,\n        //   isAuth: false,\n        // });\n      }\n    }\n  }\n\n  getUser(userObj) {\n    if (userObj === null) {\n      this.setState({\n        user: null,\n        isAuth: false,\n      });\n    } else {\n      this.setState({\n        user: userObj,\n        isAuth: true,\n      });\n    }\n  }\n\n  // não testado\n  async fetchGroups() {\n    try {\n      const response = await groups.getAll();\n      const { status, data } = response;\n      console.log('data para os grupos:', data);\n      if (status !== 200) {\n        console.log('Erro api', data);\n      } else {\n        this.setState({\n          groups: data,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  createGroup(newGroup) {\n    this.state.groups.push(newGroup);\n  }\n\n  deleteOneElement = (elementID) => {\n    //TODO deletar por ID ou ... name se for o caso do members\n    // const index = this.state.selectedGroup.members.indexOf(memberID);\n    // if (index > -1) {\n    //   this.state.selectedGroup.members.splice(index, 1);\n    // } return message = \"Can not find ID Member\";\n  };\n  renderModalEdit = (element, thisPage) => (\n    <EditModal\n      element={element}\n      iAmInThisPage={thisPage}\n      editGroup={\n        (this.editGroup = (idOfGroupToRemove, newInfo) => {\n          console.log('ESSE É O ID DO GRUPO PARA EDITAR', idOfGroupToRemove);\n          console.log('ESSA SAO AS INFORMAÇÕES DO GRUPO PARA EDITAR', newInfo);\n        })\n      }\n    />\n  );\n  renderModalDelete = (midleText, element, thisPage) => (\n    <DeleteModal\n      midleText={midleText}\n      element={element}\n      iAmInThisPage={thisPage}\n      removeGroup={\n        (this.removeGroup = (idOfGroupToRemove) => {\n          console.log('ESSE É O ID DO GRUPO PARA REMOVER', idOfGroupToRemove);\n        })\n      }\n      removeMember={\n        (this.removeMember = (memberToRemove) => {\n          console.log('ESSE É O MEMBRO PARA REMOVER', memberToRemove);\n\n          const groupCopy = { ...this.state.selectedGroup };\n          let idx = groupCopy.members.indexOf(memberToRemove);\n          groupCopy.members.splice(idx, 1);\n          this.setState({\n            selectedGroup: groupCopy,\n          });\n        })\n      }\n      removeExpense={\n        (this.removeExpense = (idToRemove) => {\n          console.log('ESSE É O ID DA DESPESA PARA REMOVER', idToRemove);\n          const groupCopy = { ...this.state.selectedGroup };\n          let idx;\n          let test = 0;\n          groupCopy.expense.map((e) => {\n            e.ID === idToRemove ? (idx = test) : (test += 1);\n          }); //TODO Verificar a forma que o ID é passada\n          groupCopy.expense.splice(idx, 1);\n          this.setState({\n            selectedGroup: groupCopy,\n          });\n        })\n      }\n      // removeSettle={this.removeSettle(idToRemove)} //TODO\n      // console.log(\"ESSE É O ID DO ACERTO PARA REMOVER\",idToRemove);\n    />\n  );\n\n  addGroup = (newGroup) => {\n    console.log(\"ESSAS SÃO AS INFORMAÇÕES DO NOVO GRUPO\", newGroup)\n    // const groupCopy = { ...this.state.selectedGroup };\n    // groupCopy.Groups.push(newGroup);\n\n    // this.setState({\n    //   selectedGroup: groupCopy,\n    // });\n  };\n\n  addMember = (newMember) => {\n    const groupCopy = { ...this.state.selectedGroup };\n    groupCopy.members.push(newMember);\n\n    this.setState({\n      selectedGroup: groupCopy,\n    });\n  };\n\n  addExpense = (newExpense) => {\n    const groupCopy = { ...this.state.selectedGroup };\n    groupCopy.expense.push(newExpense);\n\n    this.setState({\n      selectedGroup: groupCopy,\n    });\n  };\n\n  addSettle = (newSettle) => {\n    const groupCopy = { ...this.state.selectedGroup };\n    groupCopy.settles.push(newSettle);\n    console.log(newSettle);\n\n    this.setState({\n      selectedGroup: groupCopy,\n    });\n  };\n\n  // <Route path=\"*\" render={() => <Redirect to=\"/login\" />} />\n\n  render() {\n    this.fetchUser();\n    return (\n      <div className=\"App\">\n        <Navbar \n        userInSession={this.state.user} \n        getUser={this.getUser} \n        authed={this.state.isAuth}\n        groups={this.state.groups} \n        addGroup={this.addGroup}\n        />\n        {this.state.isAuth ? (\n          <Switch>\n            {/* <PrivateRoute\n              exact\n              path=\"/oi\"\n              authed={this.state.isAuth}\n              fetchGroups={this.fetchGroups}\n              component={Dashboard}\n            /> */}\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => {\n                return <Login getUser={this.getUser} {...props} />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={(props) => {\n                return <Signup getUser={this.getUser} {...props} />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Index getUser={this.getUser} />}\n            />\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={(props) => {\n                return (\n                  <Dashboard\n                    data={this.state}\n                    {...props}\n                    renderModalDelete={this.renderModalDelete}\n                    renderModalEdit={this.renderModalEdit}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/dashboard/pessoas\"\n              render={(props) => {\n                return (\n                  <Pessoas\n                    {...props}\n                    oneGroup={this.state.selectedGroup}\n                    renderModalDelete={this.renderModalDelete}\n                    addMember={this.addMember}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/dashboard/despesas\"\n              render={(props) => {\n                return (\n                  <Despesas\n                    {...props}\n                    oneGroup={this.state.selectedGroup}\n                    renderModalDelete={this.renderModalDelete}\n                    addExpense={this.addExpense}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/dashboard/acertos\"\n              render={(props) => {\n                return (\n                  <Acertos\n                    {...props}\n                    oneGroup={this.state.selectedGroup}\n                    renderModalDelete={this.renderModalDelete}\n                    addSettle={this.addSettle}\n                  />\n                );\n              }}\n            />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              user={this.state.user}\n              render={(props) => <Login getUser={this.getUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              user={this.state.user}\n              render={(props) => <Signup getUser={this.getUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/\"\n              user={this.state.user}\n              render={(props) => <Index getUser={this.getUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/reports\"\n              render={(props) => {\n                return <Reports data={this.state} {...props} />;\n              }}\n            />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from '../src/Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}