{"version":3,"sources":["util/api.js","Components/Index/Index.jsx","Components/Navbar/Navbar.jsx","Components/Login/Login.jsx","Components/Signup/Signup.jsx","Components/Dashboard/Dashboard.jsx","Components/DashNavbar/DashNavbar.jsx","Components/DashPessoas/DashPessoas.jsx","Components/DashDespesas/Checkbox.jsx","Components/DashDespesas/DashDespesas.jsx","Components/DashAcertos/DashAcertos.jsx","Components/Modal/DeleteModal.jsx","Components/Modal/EditModal.jsx","Components/PrivateRoute/PrivateRoute.jsx","Components/ReportsSummary/ReportsSummary.jsx","Components/ReportsBills/ReportsBills.jsx","Components/ReportsSettle/ReportsSettle.jsx","Components/Reports/Reports.jsx","Components/App/App.jsx","serviceWorker.js","index.js"],"names":["auth","endpoint","process","login","username","password","axios","post","withCredentials","response","data","status","signup","isAuth","get","this","logout","groups","create","groupName","description","date","createNewGroup","infoNewGroup","getAll","getOne","groupId","put","groupDataObj","delete","createExpense","groupID","expenseDataObj","putExpense","expenseID","deleteExpense","createSettle","settleDataObj","putSettle","settleID","deleteSettle","getBalances","getBills","getSettles","console","log","Index","props","className","Navbar","handleChange","event","newInfoGroup","state","target","name","value","setState","handleSubmitNewGroup","preventDefault","addGroup","bind","handleClick","prevProps","userInSession","user","authed","getUser","id","group","getSelectedGroup","selectedGroup","to","type","data-toggle","data-target","map","e","i","key","onClick","_id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","onChange","Component","Login","redirectToReferrer","handleFormSubmit","error","message","from","location","pathname","onSubmit","Signup","history","push","Dashboard","userGroups","renderModalDelete","renderModalEdit","match","url","path","render","params","DashNavbar","ID","paramId","DashPessoas","newMember","handleSubmit","members","str","replace","slice","groupCopy","prevState","Object","keys","length","membersArray","Array","isArray","required","sort","a","b","localeCompare","CheckBox","checked","isChecked","handleCheckChieldElement","for","DashDespesas","arr","handleAllChecked","newExpense","isDivideByAll","split","divideBy","oneGroup","forEach","member","editExpense","selectedMembers","document","getElementById","idx","indexOf","splice","paidBy","addExpense","expenses","getSingleGroup","singleSelection","maxLength","min","max","step","placeholder","DashAcertos","editSettle","newSettle","settles","errorMessage","paidTo","newSettleCopy","newErrorMessage","copyNewSettle","addSettle","DeleteModal","whatIsMyPage","iAmInThisPage","removeGroup","element","removeMember","removeExpense","removeSettle","midleText","EditModal","editGroup","actualPage","renderThis","PrivateRoute","component","rest","ReportsSummary","msg","balances","then","qryObj","queryResult","catch","scope","qry","expensePaid","share","settlePaid","settleReceived","balance","ReportsBills","groupAllExpenses","ReportsSettle","groupAllSettles","Reports","aria-expanded","aria-controls","App","deleteOneElement","elementID","thisPage","idOfGroupToEdit","newInfo","idOfGroupToRemove","memberToRemove","membersArr","expenseInfo","settleToRemove","newGroup","idOfExpenseToEdit","idOfSettleToEdit","fetchGroups","getGroups","loggedInUser","userObj","groupObj","fetchUser","exact","Boolean","window","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ff49114.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const auth = {\n  endpoint: process.env.REACT_APP_API, // 'http://localhost:5000/api', //Dev\n\n  async login(username, password) {\n    try {\n      const response = await axios.post(\n        `${this.endpoint}/login`,\n        {\n          username,\n          password,\n        },\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  async signup(username, password) {\n    try {\n      const response = await axios.post(\n        `${this.endpoint}/signup`,\n        {\n          username,\n          password,\n        },\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  isAuth() {\n    return axios.get(`${this.endpoint}/is-auth`, { withCredentials: true });\n  },\n\n  logout() {\n    return axios.get(`${this.endpoint}/logout`, { withCredentials: true });\n  },\n};\n\nexport const groups = {\n  endpoint: process.env.REACT_APP_API, // 'http://localhost:5000/api', //Dev\n\n  /*\n\n    try {\n      const response = await axios.post(\n        `${this.endpoint}/signup`,\n        {\n          username,\n          password,\n        },\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n\n*/\n  create(groupName, description, date) {\n    // User must be logged in\n    return axios.post(\n      `${this.endpoint}/groups`,\n      {\n        groupName,\n        description,\n        date,\n      },\n      { withCredentials: true }\n    );\n  },\n  createNewGroup(infoNewGroup) {\n    // User must be logged in\n    return axios.post(`${this.endpoint}/groups`, infoNewGroup, {\n      withCredentials: true,\n    });\n  },\n\n  async getAll() {\n    try {\n      const response = await axios.get(\n        // User must be logged in\n        `${this.endpoint}/groups`,\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  async getOne(groupId) {\n    try {\n      const response = await axios.get(\n        // User must be logged in\n        `${this.endpoint}/groups/${groupId}`,\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  async put(groupId, groupDataObj) {\n    try {\n      const response = await axios.put(\n        // User must be logged in\n        `${this.endpoint}/groups/${groupId}`,\n        groupDataObj, // Verificar modo de passar dados do grupo que serão modificados\n        { withCredentials: true }\n      );\n      const { data, status } = response;\n      return { data, status };\n    } catch (error) {\n      const { data, status } = error.response;\n      return { data, status };\n    }\n  },\n\n  delete(groupId) {\n    return axios.delete(\n      // User must be logged in\n      `${this.endpoint}/groups/${groupId}`,\n      { withCredentials: true }\n    );\n  },\n\n  //EXPENSES\n  /*Example:\n\n      expenseData: {\n       \"description\": \"picanha\",\n        \"value\": 10,\n        \"split\": {\n          \"paidBy\": \"WonderWoman\",\n          \"dividedBy\": [\"WonderWoman\",\"Batman\", \"Aquaman\", \"Superman\"]\n        }\n      }\n    \n      */\n  createExpense(groupID, expenseDataObj) {\n    // User must be logged in\n    return axios.post(\n      `${this.endpoint}/groups/${groupID}/expenses`,\n      expenseDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  putExpense(groupID, expenseID, expenseDataObj) {\n    // User must be logged in\n    return axios.put(\n      `${this.endpoint}/groups/${groupID}/expenses/${expenseID}`,\n      expenseDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  deleteExpense(groupID, expenseID) {\n    // User must be logged in\n    return axios.delete(\n      `${this.endpoint}/groups/${groupID}/expenses/${expenseID}`,\n      { withCredentials: true }\n    );\n  },\n\n  //SETTLES\n  /*Model:\n      {\n        owner: { type: Schema.Types.ObjectId, ref: 'Group', required: true },\n        value: { type: Number, required: true },\n        paidBy: String,\n        paidTo: String,\n      },\n\n      Example: settleDataObj / JSON\n\n\n      {\n        \"value\": 40,\n        \"paidBy\": \"Superman\",\n        \"paidTo\": \"WonderWoman\"\n      }\n    \n      */\n  createSettle(groupID, settleDataObj) {\n    // User must be logged in\n    return axios.post(\n      `${this.endpoint}/groups/${groupID}/settles`,\n      settleDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  putSettle(groupID, settleID, settleDataObj) {\n    // User must be logged in\n    return axios.put(\n      `${this.endpoint}/groups/${groupID}/settles/${settleID}`,\n      settleDataObj,\n      { withCredentials: true }\n    );\n  },\n\n  deleteSettle(groupID, settleID) {\n    // User must be logged in\n    return axios.delete(\n      `${this.endpoint}/groups/${groupID}/settles/${settleID}`,\n      { withCredentials: true }\n    );\n  },\n\n  //REPORTS\n  //API:\n  //http://localhost:5000/api/groups/5e39a5dcd92dfc45cc871308/balance\n\n  getBalances(groupId) {\n    // console.log('getBalances of a group', groupId);\n    return axios.get(\n      //\n      `${this.endpoint}/groups/${groupId}/balance`,\n      { withCredentials: true }\n    );\n  },\n\n  getBills(groupId) {\n    // console.log('getBills of a group', groupId);\n    return axios.get(\n      //\n      `${this.endpoint}/groups/${groupId}/historyExpenses`,\n      { withCredentials: true }\n    );\n  },\n\n  getSettles(groupId) {\n    console.log('getSettles of a group', groupId);\n    return axios.get(\n      //\n      `${this.endpoint}/groups/${groupId}/historySettles`,\n      { withCredentials: true }\n    );\n  },\n};\n","import React from 'react';\n\nexport default function Index(props) {\n  return (\n    <div>\n      <h1>A maneira mais fácil de dividir as contas da galera!</h1>\n      <p className=\"text\"> Com o <strong>BANANA</strong><em>SPLIT</em> você pode criar diferentes grupos, \n          com diferentes pessoas e dividir as contas de forma simples, gratuita e livre de downloads.</p><br/>\n      <p  className=\"text\"><strong>Para começar a aproveitar é fácil:</strong><br/>\n        - Crie uma conta em nosso menu superior;<br/>\n        - Crie um novo grupo e insira os participantes;<br/>\n        - Você sempre poderá adicionar novas pessoas;<br/>\n        - Como administrador, você deve adicionar as contas;<br/>\n        - Compartilhe o link do nosso relatório com seus amigos;<br/>\n        - Aproveite o tempo que sobrou para se divertir com eles.<br/>\n      </p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Navbar.css';\n\nimport { auth, groups } from '../../util/api';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // user: null,\n      // isAuth: false,\n      addGroup: this.props.addGroup, // provavelmente pode deletar\n      newInfoGroup: {\n        groupName: '',\n        description: '',\n        date: '',\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitNewGroup = this.handleSubmitNewGroup.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleChange = (event) => {\n    const newInfoGroup = { ...this.state.newInfoGroup };\n    const { name, value } = event.target;\n    newInfoGroup[name] = value;\n\n    this.setState({ newInfoGroup: newInfoGroup });\n  };\n  handleSubmitNewGroup = (event) => {\n    event.preventDefault();\n    const { newInfoGroup } = this.state;\n    groups.createNewGroup(newInfoGroup);\n\n    this.props.addGroup(newInfoGroup);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userInSession !== prevProps.userInSession) {\n      this.setState({\n        user: this.props.userInSession,\n        isAuth: this.props.authed,\n      });\n    }\n  }\n\n  async logout() {\n    try {\n      await auth.logout();\n      this.setState({\n        user: null,\n        isAuth: false,\n      });\n      this.props.getUser(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async handleClick(id) {\n    const response = await groups.getOne(id);\n    const group = response.data;\n    this.props.getSelectedGroup(group);\n\n    // console.log('group:', group)\n    this.setState({\n      selectedGroup: group.data,\n    });\n  }\n\n  render() {\n    console.log('pros da navbar:', this.props);\n    // TODO: barbosa, acrescentei um botão, mas parece que quebrei o styling.\n    console.log('grupos nas props? ', this.props.groups);\n    return (\n      <div>\n        {this.props.authed ? (\n          <>\n            <nav className=\"navbar navbar-light bg-yellow justify-content-between\">\n              <div>\n                <Link className=\"navbar-brand\" to=\"/groups\">\n                  <strong>BANANA</strong>\n                  <em>\n                    <i>SPLIT</i>\n                  </em>\n                </Link>\n              </div>\n\n              <div className=\"dropdown ml-auto mr-3 btn btn-outline-dark dropdown-toggle\">\n                <Link to=\"/groups\" className=\"dropbtn\">\n                  Grupos\n                </Link>\n                <div className=\"dropdown-content\">\n                  <button\n                    className=\"btn btn-success dropdown-item bg-success text-white\"\n                    type=\"button\"\n                    data-toggle=\"modal\"\n                    data-target=\"#creategroupbutton\"\n                  >\n                    Criar Grupo\n                  </button>\n                  <hr className=\"py-0 my-1\" />\n                  {this.props.authed &&\n                    this.props.groups.map((e, i) => {\n                      return (\n                        <Link\n                          key={i}\n                          onClick={() => this.handleClick(e._id)}\n                          to={`/groups/${e._id}/pessoas`}\n                          className=\"dropdown-item px-1\"\n                          type=\"button\"\n                        >\n                          {e.groupName}\n                        </Link>\n                      );\n                    })}\n                </div>\n              </div>\n\n              <div className=\"dropdown ml-auto mr-3 btn btn-outline-dark dropdown-toggle\">\n                <button className=\"dropbtn\">Relatórios</button>\n                <div className=\"dropdown-content\">\n                  <hr className=\"py-0 my-1\" />\n                  {this.props.authed &&\n                    this.props.groups.map((e) => {\n                      return (\n                        <Link\n                          to={`/groups/${e._id}/reports`}\n                          className=\"dropdown-item px-1\"\n                          type=\"button\"\n                        >\n                          {e.groupName}\n                        </Link>\n                      );\n                    })}\n                </div>\n              </div>\n\n              <div>\n                <Link\n                  className=\"btn btn-outline-dark\"\n                  to=\"/\"\n                  onClick={this.logout}\n                >\n                  Sair\n                </Link>\n              </div>\n            </nav>\n\n            {/* // CREATE A GROUP MODAL */}\n\n            <div\n              className=\"modal fade\"\n              id=\"creategroupbutton\"\n              tabIndex=\"-1\"\n              role=\"dialog\"\n              aria-labelledby=\"exampleModalCenterTitle\"\n              aria-hidden=\"true\"\n            >\n              <div\n                className=\"modal-dialog modal-dialog-centered\"\n                role=\"document\"\n              >\n                <form className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">NOVO GRUPO</h5>\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      data-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </div>\n\n                  <div className=\"modal-body\">\n                    <div>\n                      <div className=\"form-group text-left \">\n                        <label htmlFor=\"groupName\" className=\"col-form-label\">\n                          Nome do grupo:\n                        </label>\n                        <input\n                          onChange={this.handleChange}\n                          type=\"text\"\n                          value={this.state.newInfoGroup.groupName}\n                          className=\"form-control\"\n                          id=\"groupName\"\n                          name=\"groupName\"\n                        />\n                        <label htmlFor=\"description\" className=\"col-form-label\">\n                          Descrição:\n                        </label>\n                        <input\n                          onChange={this.handleChange}\n                          type=\"text\"\n                          value={this.state.newInfoGroup.description}\n                          className=\"form-control\"\n                          id=\"description\"\n                          name=\"description\"\n                        />\n                        <label htmlFor=\"date\" className=\"col-form-label\">\n                          Data do evento:\n                        </label>\n                        <input\n                          onChange={this.handleChange}\n                          type=\"date\"\n                          value={this.state.newInfoGroup.date}\n                          className=\"form-control\"\n                          id=\"date\"\n                          name=\"date\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary\"\n                      data-dismiss=\"modal\"\n                    >\n                      Cancelar\n                    </button>\n                    <button\n                      onClick={this.handleSubmitNewGroup}\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n                      data-dismiss=\"modal\"\n                    >\n                      CRIAR\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </>\n        ) : (\n          <nav className=\"navbar navbar-light bg-yellow justify-content-between\">\n            <div>\n              <Link className=\"navbar-brand\" to=\"/\">\n                <strong>BANANA</strong>\n                <em>SPLIT</em>\n              </Link>\n            </div>\n            <div>\n              <Link className=\"btn btn-outline-dark mr-3\" to=\"/login\">\n                Entre\n              </Link>\n              <Link className=\"btn btn-outline-dark\" to=\"/signup\">\n                Cadastre-se\n              </Link>\n            </div>\n          </nav>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { auth } from '../../util/api';\n\nimport { groups } from '../../util/api';\n\nimport { Redirect } from 'react-router-dom';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToReferrer: false,\n      username: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  // TODO: depois do login, os dados do grupo ainda não estão carregados!\n  // TODO: O app está resolvendo a rota como se o usuário não estivesse logado (batendo na private route e redirecionando\n  async handleFormSubmit(event) {\n    event.preventDefault();\n    const { username, password } = this.state;\n    try {\n      const { data, status } = await auth.login(username, password);\n      console.log(status);\n      if (status !== 200) {\n        this.setState({\n          error: data.message,\n          username: '',\n          password: '',\n        });\n        return;\n      }\n      this.setState({\n        redirectToReferrer: true,\n        error: false,\n      });\n      this.props.getUser(data);\n      // const { location } = this.props;\n      // if (!location.state) {\n      //   this.props.history.push('/groups');\n      // }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    // no sucesso, redireciona de onde ele veio ou leva ele de volta para login\n    const { from } = this.props.location.state || {\n      from: { pathname: '/groups' },\n    };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) {\n      console.log('redirect do login:', from);\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div>\n        <div>\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Login</h5>\n              </div>\n              <div className=\"modal-body\">\n                <br />\n                {this.state.error && this.state.error}\n                <form onSubmit={this.handleFormSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"recipient-user\" className=\"col-form-label\">\n                      Usuário:\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"recipient-user\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label\n                      htmlFor=\"recipient-password\"\n                      className=\"col-form-label\"\n                    >\n                      Senha:\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"recipient-password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-dismiss=\"modal\"\n                  >\n                    Cancelar\n                  </button>\n                  <input\n                    type=\"submit\"\n                    value=\"Entrar\"\n                    className=\"btn btn-primary\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { auth } from '../../util/api';\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  async handleFormSubmit(event) {\n    event.preventDefault();\n    const { username, password } = this.state;\n    try {\n      const { data, status } = await auth.signup(username, password);\n      console.log(\n        'data: ', data,\n        'status: ', status, \n      )\n      if (status !== 200) {\n        this.setState({\n          error: data.message,\n          username: '',\n          password: '',\n        });\n        return;\n      } else {\n        this.props.getUser(data);\n        this.props.history.push(\"/groups\");\n        this.setState({\n          error: false,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    return (\n      <div\n      // className=\"modal fade\"\n      // id=\"signupbutton\"\n      // tabIndex=\"-1\"\n      // role=\"dialog\"\n      // aria-labelledby=\"exampleModalCenterTitle\"\n      // aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Signup</h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n                <br />\n                  {this.state.error && this.state.error}\n            <div className=\"modal-body\">\n              <form onSubmit={this.handleFormSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"recipient-usuario\" className=\"col-form-label\">\n                    Usuário:\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"recipient-usuario\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"recipient-password\"\n                    className=\"col-form-label\"\n                  >\n                    Senha:\n                  </label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"recipient-password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"modal-footer\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-dismiss=\"modal\"\n                  >\n                    Cancelar\n                  </button>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Criar\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n\n<div\n          // className=\"modal fade\"\n          // id=\"signupbutton\"\n          // tabIndex=\"-1\"\n          // role=\"dialog\"\n          // aria-labelledby=\"exampleModalCenterTitle\"\n          // aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Dados para cadastro</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form onSubmit={this.handleSignUpFormSubmit}>\n                  <div className=\"form-group\">\n                    <label\n                      htmlFor=\"recipient-usuario\"\n                      className=\"col-form-label\"\n                    >\n                      Usuário:\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"recipient-usuario\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label\n                      htmlFor=\"recipient-password\"\n                      className=\"col-form-label\"\n                    >\n                      Senha:\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"recipient-password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div className=\"modal-footer\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary\"\n                      data-dismiss=\"modal\"\n                    >\n                      Cancelar\n                    </button>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      CRIAR\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n*/\n","import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport './Dashboard.css';\n\nimport { groups } from '../../util/api';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userGroups: this.props.data.groups,\n      renderModalDelete: this.props.renderModalDelete,\n      renderModalEdit: this.props.renderModalEdit,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick(id) {\n    const response = await groups.getOne(id);\n    const group = response.data;\n    this.props.getSelectedGroup(group);\n\n    this.setState({\n      selectedGroup: group.data,\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <>\n        <h1>Seus Grupos</h1>\n        {this.state.userGroups.map((e) => {\n          return (\n            <>\n              <hr />\n              <div className=\"row m-1 d-flex justify-content-center\">\n                <div className=\"col-md-7 d-flex flex-column mt-1\">\n                  <Link\n                    onClick={() => this.handleClick(e._id)}\n                    to={`${match.url}/${e._id}/pessoas`}\n                    className=\"btn btn-outline-secondary \"\n                  >\n                    {e.groupName} - {e.description}\n                  </Link>\n                </div>\n                <div className=\"col-md-4 p-0 ml-1 d-flex flex-row justify-content-center mt-1\">\n                  <button className=\"btn btn-secondary mr-1\">Relatório</button>\n                  <button\n                    data-toggle=\"modal\"\n                    data-target={`#editButton${e._id}`}\n                    className=\"btn btn-warning mr-1\"\n                  >\n                    Editar\n                  </button>\n                  <button\n                    data-toggle=\"modal\"\n                    data-target={`#deleteButton${e._id}`}\n                    className=\"btn btn-danger\"\n                  >\n                    Excluir\n                  </button>\n                </div>\n              </div>\n              {this.props.renderModalDelete(e.groupName, e._id, 'dashboard')}\n              {this.props.renderModalEdit(e, 'dashboard')}\n            </>\n          );\n        })}\n        <Route\n          path={`${match.path}/:id`}\n          render={({ match }) => {\n            return (\n              <div>\n                {' '}\n                <h1>{match.params.id}</h1>\n              </div>\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass DashNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ID: this.props.ID,\n      groupName: this.props.groupName,\n      description: this.props.description,\n    };\n  }\n  render() {\n    const { paramId } = this.props;\n    return (\n      <>\n        <h1>\n          Grupo: {this.props.groupName}\n          <h5>{this.props.description}</h5>\n        </h1>\n\n        <div className=\"dashContent row py-0 my-2\">\n          <div\n            className=\"btn-group btn-group-toggle mx-auto my-0\"\n            data-toggle=\"buttons\"\n          >\n            <NavLink\n              to={`/groups/${paramId}/pessoas`}\n              className=\"btn btn-outline-secondary btn-yellow-dashboard\"\n            >\n              <input type=\"radio\" name=\"options\" id=\"dashPessoas\" />\n              Pessoas\n            </NavLink>\n\n            <NavLink\n              to={`/groups/${paramId}/despesas`}\n              className=\"btn btn-outline-secondary btn-yellow-dashboard\"\n            >\n              <input type=\"radio\" name=\"options\" id=\"dashDespesas\" />\n              Despesas\n            </NavLink>\n\n            <NavLink\n              to={`/groups/${paramId}/acertos`}\n              className=\"btn btn-outline-secondary btn-yellow-dashboard\"\n            >\n              <input type=\"radio\" name=\"options\" id=\"dashAcertos\" />\n              Acertos\n            </NavLink>\n          </div>\n        </div>\n        <hr className=\"my-2\" />\n      </>\n    );\n  }\n}\n\nexport default DashNavbar;\n","import React, { Component } from 'react';\nimport DashNavbar from '../DashNavbar/DashNavbar';\nimport { groups } from '../../util/api';\n\nclass DashPessoas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedGroup: {},\n      newMember: ' ',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.props.addMember = this.props.addMember.bind(this);\n  }\n  handleChange(event) {\n    const { value } = event.target;\n    this.setState({ newMember: value });\n    //teste\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log('oi, submit!');\n    let str = this.state.newMember;\n    str = str.replace(/\\s{2,}/g, ' ');\n    if (str === ' ') {\n      console.log('oi');\n      return;\n    }\n    let _id, members;\n    if (str[0] === ' ') {\n      str.slice(0, 1);\n      console.log('meu grupo selecionado:', this.props.selectedGroup);\n      // pegar o grupo selecionado, atualizar o array de membros, devolver o objeto para o put da api\n      _id = this.props.selectedGroup._id;\n      members = this.props.selectedGroup.members;\n      if (_id && members) {\n        members.push(str);\n        const groupCopy = { ...this.props.selectedGroup };\n        console.log('meu groupCopy:', groupCopy);\n        groupCopy.members = members;\n        const response = groups.put(_id, groupCopy);\n        console.log('resposta do put:', response);\n      }\n    } else {\n      _id = this.props.selectedGroup._id;\n      members = this.props.selectedGroup.members;\n      if (_id && members) {\n        members.push(str);\n        const groupCopy = { ...this.props.selectedGroup };\n        console.log('meu groupCopy:', groupCopy);\n        groupCopy.members = members;\n        const response = groups.put(_id, groupCopy);\n        console.log('resposta do put:', response);\n      }\n      this.setState({\n        newMember: ' ',\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (Object.keys(this.props.selectedGroup).length === 0) {\n      const response = await groups.getOne(this.props.match.params.id);\n      const group = response.data;\n      this.props.getSelectedGroup(group);\n    }\n    console.log('props no dashpessoas:', this.props);\n  }\n\n  render() {\n    const { id: paramId } = this.props.match.params;\n    let membersArray = [];\n    if (Array.isArray(this.props.selectedGroup.members)) {\n      membersArray = this.props.selectedGroup.members;\n    }\n    return (\n      <>\n        <DashNavbar paramId={paramId} />\n        <div className=\"dashMainContent mx-4\">\n          <h2>Adicionar pessoa:</h2>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"dashAddBills d-flex justify-content-between align-items-end flex-wrap\"\n          >\n            <div className=\"form-group text-left col-lg-4 mt-1 mb-0 p-0\">\n              Nome:\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"newMemberName\"\n                name=\"name\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            {/* <div className=\"form-group text-left col-lg-5 mb-0 mt-1 p-0\">\n              Contato:\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"newMemberContact\"\n                name=\"contact\"\n                value={this.state.newMember.contact}\n                placeholder={\"E-mail ou Telefone para contato\"}\n                onChange={this.handleChange}\n              />\n            </div> */}\n            <button\n              type=\"submit\"\n              value=\"submit\"\n              className=\"btn btn-warning mt-2 col-lg-2\"\n            >\n              Submit\n            </button>\n          </form>\n          <hr />\n\n          <div className=\"dashBillsList\">\n            <div className=\"row\">\n              {membersArray\n                .sort((a, b) => a.localeCompare(b))\n                .map((e, i) => {\n                  return (\n                    <>\n                      <div key={i} className=\"col-lg-6 p-0 my-1\">\n                        <button className=\"btn btn-outline-secondary col-10\">\n                          {e}\n                        </button>{' '}\n                        <button\n                          className=\"btn btn-danger col-1\"\n                          onClick={() => this.props.renderModalDelete(e, e)}\n                          type=\"button\"\n                          data-toggle=\"modal\"\n                          data=\"teste\"\n                          data-target={`#deleteButton${e}`}\n                        >\n                          {' '}\n                          X{' '}\n                        </button>\n                        {this.props.renderModalDelete(e, e, 'member')}\n                      </div>\n                    </>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DashPessoas;\n","import React from \"react\";\n\nexport const CheckBox = props => {\n  // {props.doSomething(props.isChecked)}\n  return (\n    <li className=\"d-flex mx-auto dropdown-item \">\n      <input\n        className=\"mx=auto my-auto\"\n        // key=\"split\"\n        id={props.name}\n        // onClick={props.handleCheckChieldElement}\n        type=\"checkbox\"\n        checked={props.isChecked}\n        name=\"divideBy\"\n        value={props.name}\n        onChange={props.handleCheckChieldElement}\n        />\n      <label\n        className=\"dropdown-item mx-0 my-0 bg-transparent\"\n        for={props.name}\n      >\n        {props.name}\n      </label>\n    </li>\n  );\n};\n\nexport default CheckBox;\n","import React, { Component } from \"react\";\nimport DashNavbar from \"../DashNavbar/DashNavbar\";\nimport CheckBox from \"./Checkbox\";\nimport \"./DashDespesas.css\";\nimport { groups } from \"../../util/api\";\n\nconst membersToArr = (arr) => {\n  arr.map((e) => {\n    let memberObj = { name: e };\n    return memberObj;\n  });\n};\n\nclass DashDespesas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      group: {},\n      members: membersToArr(this.props.oneGroup.members),\n      expenses: this.props.oneGroup.expenses,\n      selectedMembers: [],\n      newExpense: {\n        group: this.props.oneGroup._id,\n        description: \"\",\n        value: 0,\n        split: {\n          paidBy: \"\",\n          divideBy: [],\n          isDivideByAll: false\n        }\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAllChecked = this.handleAllChecked.bind(this);\n    this.editExpense = this.editExpense.bind(this);\n    this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async singleSelection() {\n    const { params } = this.props.match;\n    const group = await groups.getOne(params.id);\n\n    const members = group.data.members;\n    const expenses = group.data.expenses;\n\n    this.setState({ members: members, expenses : expenses });\n  }\n\n  async getSingleGroup() {\n    const { params } = this.props.match;\n    const group = await groups.getOne(params.id);\n    this.setState({\n      group: group.data\n    });\n  }\n  componentDidMount() {\n    this.getSingleGroup();\n    this.singleSelection();\n  }\n  \n  handleAllChecked = event => {\n    const { newExpense } = this.state;\n    let isDivideByAll = \"Error\";\n    event.target.checked ? (isDivideByAll = true) : (isDivideByAll = false);\n    newExpense.split.isDivideByAll = isDivideByAll;\n    \n    newExpense.split.divideBy = [];\n    const members = [...this.props.oneGroup.members].map((e) => {\n          let memberObj = { name: e };\n          return memberObj;\n        });\n    \n    members.map(e =>\n      event.target.checked\n        ? newExpense.split.divideBy.push(e.name)\n        : newExpense.split.divideBy\n    );\n    members.forEach(member => (member.isChecked = event.target.checked));\n    this.setState({ newExpense: newExpense });\n  };\n  editExpense = e => {\n    let { newExpense } = this.state;\n    newExpense = e;\n\n    this.setState({ newExpense: newExpense });\n  };\n  handleCheckChieldElement = event => {\n    const { newExpense } = this.state;\n    const { members } = this.state;\n    \n    let selectedMembers = this.state.selectedMembers;\n    \n    members.map(member => {\n      if (member.name === event.target.value) {\n        member.isChecked = event.target.checked;\n\n        if (!event.target.checked) {\n          document.getElementById(\"isDivideByAll\").checked = false;\n          newExpense.split.isDivideByAll = false;\n          let idx = selectedMembers.indexOf(member.name);\n          selectedMembers.splice(idx, 1);\n          newExpense.split.divideBy = selectedMembers;\n        } if (event.target.checked) {\n          document.getElementById(\"isDivideByAll\").checked = true;\n          let it = 0;\n          members.map(e => {\n           !e.isChecked\n            ? (document.getElementById(\"isDivideByAll\").checked = false)\n            : (it = 1);\n          });\n          selectedMembers.push(member.name);\n          newExpense.split.divideBy = selectedMembers;\n        }\n      }\n      newExpense.split.isDivideByAll = document.getElementById(\n        \"isDivideByAll\"\n      ).checked;\n    });\n\n    this.setState({\n      members: members,\n      selectedMembers: selectedMembers,\n      newExpense: newExpense\n    });\n  };\n  handleChange = event => {\n    console.log(event.target.name);\n    const newExpense = { ...this.state.newExpense };\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"paidBy\":\n        newExpense.split.paidBy = value;\n        break;\n      case \"divideBy\":\n        newExpense.split.divideBy = value;\n        break;\n      case \"value\":\n        newExpense.value = value;\n        break;\n      case \"description\":\n        newExpense.description = value;\n        break;\n      default:\n        break;\n    }\n    this.setState({ newExpense: newExpense });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { newExpense } = this.state;\n    console.log(\"AQUI VEM AS INFORMACOES\", newExpense);\n    \n    // If has an id got to edit function and else add new one expense\n    newExpense._id\n    ? this.props.editExpense(newExpense._id, newExpense)\n    : this.props.addExpense(newExpense);\n    \n    this.setState({ newExpense: newExpense });\n  };\n\n  render() {\n    const { id: paramId } = this.props.match.params;\n    return (\n      <>\n        <DashNavbar\n          paramId={paramId}\n          description={this.props.oneGroup.description}\n          groupName={this.props.oneGroup.groupName}\n        />\n\n        <div className=\"dashMainContent mx-2 p-0\">\n          {/* <!-- Add bills --> */}\n          <h2>Adicionar nova despesa:</h2>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"dashAddBills d-flex justify-content-between align-items-end flex-wrap\"\n          >\n            <div className=\"form-group text-left col-xl-3 m-1 mb-0 p-0\">\n              Descrição:\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                maxLength=\"25\"\n                name=\"description\"\n                onChange={this.handleChange}\n                value={this.state.newExpense.description}\n              />\n            </div>\n            <div className=\"form-group text-left col-xl-2 m-1 mb-0 p-0\">\n              Pagou:\n              <select\n                className=\"form-control\"\n                name=\"paidBy\"\n                onChange={this.handleChange}\n                value={this.state.newExpense.split.paidBy}\n              >\n                <option>Selecione um membro</option>\n                {this.props.oneGroup.members\n                  .map(e => {\n                    let memberObj = { name: e };\n                    return memberObj;\n                  })\n                  .sort((a, b) => a.name.localeCompare(b.name))\n                  .map(member => {\n                    return <option>{member.name}</option>;\n                  })}\n              </select>\n            </div>\n            <div className=\"form-group text-left col-xl-2 mb-0 m-1 p-0\">\n              Valor:\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                min=\"0.00\"\n                max=\"10000.00\"\n                step=\"0.01\"\n                id=\"value\"\n                placeholder=\"R$ 10,00\"\n                onChange={this.handleChange}\n                value={this.state.newExpense.value}\n                name=\"value\"\n              />\n            </div>\n\n            <div className=\"form-group text-left col-xl-2 mb-0 m-1 p-0\">\n              Dividir Por:\n              <div className=\"btn btn-outline-secondary dropdown dropdown-toggle form-control\">\n                Selecione os membros\n                <div className=\"dropdown-content form-group\">\n                  <div className=\"dropdown-item d-flex form-group\">\n                    <input\n                      className=\"dropdown-item mx-0 my-auto bg-transparent\"\n                      type=\"checkbox\"\n                      onChange={this.handleChange}\n                      onClick={this.handleAllChecked}\n                      id=\"isDivideByAll\"\n                      name=\"isDivideByAll\"\n                    />\n                    <label\n                      className=\"dropdown-item py-2 my-0 bg-transparent\"\n                      htmlFor=\"isDivideByAll\"\n                    >\n                      Todos\n                    </label>\n                  </div>\n                  <ul>\n                    {[...this.props.oneGroup.members]\n                      .map(e => {\n                        let memberObj = { name: e };\n                        return memberObj;\n                      })\n                      .map(member => {\n                        return (\n                          <CheckBox\n                            handleCheckChieldElement={\n                              this.handleCheckChieldElement\n                            }\n                            handleChange={this.handleChange}\n                            {...member}\n                          />\n                        );\n                      })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <button onClick={()=>{this.handleSubmit()}} type=\"submit\" className=\"btn btn-warning mb-1 col-xl-1\">\n              Submit\n            </button>\n          </form>\n          <hr />\n\n          {/* <!-- Bills list --> */}\n          <div className=\"dashBillsList m-1\">\n            <div className=\"row m-0\">\n              {this.state.expenses.map(e => {\n                return (\n                  <div className=\"col-lg-5 p-0 m-1 mx-auto dashComponents\">\n                    <div className=\"col-9 p-0\">\n                      <button className=\"btn btn-outline-secondary boxComponent\">\n                        {e.description}\n                      </button>\n                    </div>\n                    <div className=\"col-2 p-0\">\n                      <button\n                        className=\"btn btn-warning buttonOptions\"\n                        type=\"button\"\n                        onClick={() => this.editExpense(e)}\n                      >\n                        Editar\n                      </button>\n                      <button\n                        className=\"btn btn-danger buttonOptions\"\n                        type=\"button\"\n                        data-toggle=\"modal\"\n                        data-target={`#deleteButton${e._id}`}\n                      >\n                        Excluir\n                      </button>\n                    </div>\n                    {this.props.renderModalDelete(e.description, e, \"expense\")}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DashDespesas;\n","import React, { Component } from 'react';\nimport DashNavbar from '../DashNavbar/DashNavbar';\nimport './DashAcertos.css';\n\nclass DashAcertos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      group: this.props.oneGroup,\n      members: this.props.oneGroup.members,\n      settles: this.props.oneGroup.settles,\n      renderModalDelete: this.props.renderModalDelete,\n      errorMessage: '',\n      newSettle: {\n        _id: null,\n        group: this.props.oneGroup._id,\n        value: 0,\n        paidBy: '',\n        paidTo: '',\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // TODO: ARRUMAR NAS 3\n  // async getSingleGroup() {\n  //   const { params } = this.props.match;\n  //   const group = await groups.getOne(params.id);\n\n  //   console.log('group:', group)\n  //   this.setState({\n  //     group: group.data,\n  //   });\n  // }\n\n  editSettle = (e) => {\n    let { newSettle } = this.state;\n    newSettle = e;\n\n    this.setState({ newSettle: newSettle });\n  };\n  handleChange(event) {\n    let newErrorMessage = '';\n    const { name, value } = event.target;\n    const newSettleCopy = { ...this.state.newSettle };\n    newSettleCopy[name] = value;\n    newSettleCopy.value = +newSettleCopy.value;\n\n    this.setState(\n      { newSettle: newSettleCopy, errorMessage: newErrorMessage },\n      console.log(this.state.newSettle)\n    );\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    let newErrorMessage = '';\n    if (\n      this.state.newSettle.paidBy === '' ||\n      this.state.newSettle.paidTo === ''\n    ) {\n      newErrorMessage = 'Por favor, preencha todos os dados';\n    } else if (this.state.newSettle.paidBy === this.state.newSettle.paidTo) {\n      event.preventDefault();\n      newErrorMessage = 'Não é possível pagar a si mesmo';\n    } else {\n      const copyNewSettle = { ...this.state.newSettle };\n      copyNewSettle._id\n        ? this.props.editSettle(this.state.newSettle._id, this.state.newSettle)\n        : this.props.addSettle(this.state.newSettle);\n      copyNewSettle._id = null;\n      copyNewSettle.value = 0;\n      copyNewSettle.paidBy = '';\n      copyNewSettle.paidTo = '';\n      this.setState({ newSettle: copyNewSettle });\n    }\n    this.setState({ errorMessage: newErrorMessage });\n  }\n  render() {\n    const { id: paramId } = this.props.match.params;\n    return (\n      <>\n        <DashNavbar\n          paramId={paramId}\n          description={this.state.group.description}\n          groupName={this.state.group.groupName}\n        />\n\n        <div className=\"dashMainContent\">\n          {/* <!-- Add Settle --> */}\n          <h2>Adicionar novo acerto:</h2>\n          <form className=\"dashAddBills d-flex justify-content-between align-items-end flex-wrap px-4\">\n            <div className=\"form-group text-left col-lg-3 mt-1 mb-0 p-0\">\n              Pagou:\n              <select\n                onChange={this.handleChange}\n                name=\"paidBy\"\n                className=\"form-control\"\n                value={this.state.newSettle.paidBy}\n                required\n              >\n                <option value=\"\">Selecione um nome</option>\n                {[...this.state.members]\n                  .sort((a, b) => a.localeCompare(b))\n                  .map((member) => {\n                    return <option value={member}>{member}</option>;\n                  })}\n              </select>\n            </div>\n            <div className=\"form-group text-left col-lg-3 mb-0 mt-1 p-0\">\n              Recebeu:\n              <select\n                onChange={this.handleChange}\n                name=\"paidTo\"\n                className=\"form-control\"\n                value={this.state.newSettle.paidTo}\n                required\n              >\n                <option value=\"\">Selecione um nome</option>\n                {[...this.state.members]\n                  .sort((a, b) => a.localeCompare(b))\n                  .map((member) => {\n                    return <option value={member}>{member}</option>;\n                  })}\n              </select>\n            </div>\n            <div className=\"form-group text-left col-lg-2 mb-0 mt-1 p-0\">\n              Valor:\n              <input\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"value\"\n                className=\"form-control\"\n                min=\"0.00\"\n                max=\"10000.00\"\n                step=\"0.01\"\n                id=\"acertoValor\"\n                placeholder=\"R$ 10,00\"\n                value={this.state.newSettle.value}\n                required\n              />\n            </div>\n            <button\n              onClick={this.handleSubmit}\n              type=\"submit\"\n              className=\"btn btn-warning mt-2 col-lg-2\"\n            >\n              Submit\n            </button>\n          </form>\n          <div\n            className=\"zindex-modal alert alert-warning bg-transparent m-2 py-auto px-auto noBorder\"\n            role=\"alert\"\n          >\n            {this.state.errorMessage}\n          </div>\n          <hr />\n\n          <div className=\"dashSettleList row\">\n            {[...this.state.settles].map((e) => {\n              return (\n                <div className=\"col-lg p-0 ml-0 dashComponents\">\n                  <div className=\"col-9 p-0\">\n                    <button className=\"btn btn-outline-secondary boxComponent\">\n                      {e.paidBy} pagou para {e.paidTo} o valor de R${e.value}\n                    </button>\n                  </div>\n                  <div className=\"col-2 p-0\">\n                    <button\n                      className=\"btn btn-warning buttonOptions\"\n                      type=\"button\"\n                      onClick={() => this.editSettle(e)}\n                    >\n                      Editar\n                    </button>\n                    <button\n                      className=\"btn btn-danger buttonOptions\"\n                      type=\"button\"\n                      data-toggle=\"modal\"\n                      data-target={`#deleteButton${e._id}`}\n                    >\n                      Excluir\n                    </button>\n                    {this.props.renderModalDelete(\n                      `O pagamento de ${e.paidBy} para ${e.paidTo}`,\n                      e,\n                      'settle'\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DashAcertos;\n","import React, { Component } from \"react\";\n\nclass DeleteModal extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      midleText: this.props.midleText,\n      element: this.props.element,\n      member: this.props.element,\n      removeGroup:this.props.removeGroup,\n      removeMember:this.props.removeMember,\n      removeExpense:this.props.removeExpense,\n      iAmInThisPage:this.props.iAmInThisPage,\n    }\n  }\n  whatIsMyPage = (iAmInThisPage) => {\n    switch (iAmInThisPage) {\n      case \"dashboard\":\n        this.state.removeGroup(this.state.element)\n        break;\n      case \"member\":\n        this.state.removeMember(this.state.element)\n        break;\n      case \"expense\":\n        this.props.removeExpense(this.state.element)\n        break;\n      case \"settle\":\n        this.props.removeSettle(this.state.element)\n        break;\n      default:\n          console.log(\"Delete mode is not defined\");\n        break;\n    }\n\n  }\n  render(){\n    return (\n      <>\n      {/* // CONFIRM EXCLUSION MODAL */}\n      <div className=\"modal fade\" id={`deleteButton${(this.state.iAmInThisPage === \"settle\" || this.state.iAmInThisPage === \"expense\") ? this.state.element._id : this.state.element}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Deseja realmente remover?</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"recipient\" className=\"col-form-label\">\n                    {this.state.midleText}\n                  </label>\n                </div>\n              </form>\n            </div>\n\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">\n                {\" \"}Cancelar{\" \"}\n              </button>\n              <button onClick={() => this.whatIsMyPage(this.state.iAmInThisPage)} data-dismiss=\"modal\" type=\"button\" className=\"btn btn-danger\">\n                {\"\"}Excluir{\" \"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )};\n};\n\nexport default DeleteModal;\n","import React, { Component } from 'react';\n// import CheckBox from '../DashDespesas/Checkbox';\n// import { groups } from '../../util/api';\n\nclass EditModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      iAmInThisPage: this.props.iAmInThisPage,\n      element: this.props.element,\n      editGroup: this.props.editGroup, //(idOfGroupToRemove, info)\n      newInfoGroup: {\n        groupName: this.props.element.groupName,\n        description: this.props.element.description,\n        date: this.props.element.date,\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange = (event) => {\n    //\"dashboard\"\n    const newInfoGroup = { ...this.state.newInfoGroup };\n    const { name, value } = event.target;\n    newInfoGroup[name] = value;\n\n    this.setState({ newInfoGroup: newInfoGroup });\n\n    //\"expense\"\n    // const newInfoExpense = {...this.state.newInfoExpense};\n    // const { name, value } = event.target;\n    // newInfoExpense[name] = value;\n\n    // this.setState({newInfoExpense: newInfoExpense});\n  };\n  whatIsMyPage = (iAmInThisPage) => {\n    switch (iAmInThisPage) {\n      case 'dashboard':\n        this.state.editGroup(this.state.element._id, this.state.newInfoGroup);\n        break;\n      case 'member':\n        // this.state.editMember(this.state.element); --- one day\n        break;\n      case 'expense':\n        // this.props.editExpense(); --- one day\n        break;\n      case 'settle':\n        console.log('Error');\n        break;\n      default:\n        console.log('Delete mode is not defined');\n        break;\n    }\n  };\n  renderThis(actualPage) {\n    switch (actualPage) {\n      case 'dashboard':\n        return (\n          <div className=\"modal-body\">\n            <form>\n              <div className=\"form-group text-left \">\n                <label htmlFor=\"groupName\" className=\"col-form-label\">\n                  Nome do grupo:\n                </label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  value={this.state.newInfoGroup.groupName}\n                  className=\"form-control\"\n                  id=\"groupName\"\n                  name=\"groupName\"\n                />\n                <label htmlFor=\"description\" className=\"col-form-label\">\n                  Descrição:\n                </label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  value={this.state.newInfoGroup.description}\n                  className=\"form-control\"\n                  id=\"description\"\n                  name=\"description\"\n                />\n                <label htmlFor=\"date\" className=\"col-form-label\">\n                  Data do evento:\n                </label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"date\"\n                  value={this.state.newInfoGroup.date}\n                  className=\"form-control\"\n                  id=\"date\"\n                  name=\"date\"\n                />\n              </div>\n            </form>\n          </div>\n        );\n      case 'expense':\n      default:\n        break;\n    }\n  }\n  render() {\n    return (\n      <>\n        <div\n          className=\"modal fade\"\n          id={`editButton${this.state.element._id}`}\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalCenterTitle\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Insira os dados para editar</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n\n              {this.renderThis(this.state.iAmInThisPage)}\n\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                >\n                  {' '}\n                  Cancelar{' '}\n                </button>\n                <button\n                  onClick={() => this.whatIsMyPage(this.state.iAmInThisPage)}\n                  data-dismiss=\"modal\"\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                >\n                  {''}Editar{' '}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\n\n// Protected Route renders the component if the user is logged in. Otherwise, the user is redirected to /login\n\nexport default function PrivateRoute({\n  component: Component,\n  authed,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authed === true ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React, { Component } from 'react';\nimport { groups } from '../../util/api'; // Groups component from API service\n\nclass ReportsSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { msg: '', balances: [] };\n    // this.getBalances = this.getBalances.bind(this)\n  }\n \n  componentDidUpdate(prevProps) {\n    if (this.props.groupId !== prevProps.groupId) {\n    groups\n      .getBalances(this.props.groupId) //props do Id do grupo;\n      .then((qryObj) => {\n        // console.log('ReportSummary - componentDidUpdate - qryObj', qryObj);\n        this.setState(\n          { msg: qryObj.data.msg, balances: qryObj.data.queryResult },\n          () => console.log('ReportSummary - componentDidUpdate - this.state:', this.state)\n        );\n      })\n      .catch((error) => console.log('erro ReportBills', error));\n    }\n  }\n \n  /*\n   TODO: No componentDidMount, quando troca o grupo na navbar, não atualiza a view. Com o componentDidUpdate, atualiza, mas bate na API a todo instante! E\n  */\n \n  componentDidMount() {\n    // this.getBalances();\n    groups\n      .getBalances(this.props.groupId) //props do Id dlocalhost:500o grupo;\n      .then((qryObj) => {\n        // console.log('ReportSummary - componentDidMount - qryObj', qryObj);\n        this.setState(\n          { msg: qryObj.data.msg, balances: qryObj.data.queryResult },\n            // () => console.log('ReportSummary - componentDidMount - this.state', this.state)\n        );\n      })\n      .catch((error) => console.log('erro ReportSummary', error));\n  }\n\n  // async getBalances() {\n  //   const qryObj = await groups.getBalance(this.props.groupId);\n  //   this.setState({\n  //     msg: qryObj.data.msg,\n  //     balances: qryObj.data.queryResult,\n  //   });\n  // }\n\n  render() {\n    // this.getBalances();\n    if (this.state.balances) {\n      //Conditional return\n      return (\n        <div>\n          <p>Resumo de contas por participante:</p>\n\n          <div className=\"resultTable table-responsive-md\">\n            <table className=\"table table6 table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Integrante</th>\n                  <th scope=\"col\">Gastou</th>\n                  <th scope=\"col\">Consumiu</th>\n                  <th scope=\"col\">Pagou</th>\n                  <th scope=\"col\">Recebeu</th>\n                  <th scope=\"col\">Saldo</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* Map que recebe os registros da API e cria uma row de tabela - vide exemplo abaixo */}\n                {this.state.balances.map((qry, idx) => {\n                  return (\n                    <tr key={idx}>\n                      <td>{qry.member}</td>\n                      <td>{qry.expensePaid}</td>\n                      <td>{qry.share}</td>\n                      <td>{qry.settlePaid}</td>\n                      <td>{qry.settleReceived}</td>\n                      <td>{qry.balance}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <br />\n          <hr />\n          <br />\n        </div>\n      );\n    } else {\n      //Conditional return FALSE\n      return (\n        <div>\n          <h1>Carregando...</h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ReportsSummary;\n","import React, { Component } from 'react';\nimport { groups } from '../../util/api'; // Groups component from API service\n\nclass ReportsBills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '', groupAllExpenses: [] };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.groupId !== prevProps.groupId) {\n    groups\n      .getBills(this.props.groupId) //props do Id do grupo;\n      .then((qryObj) => {\n        // console.log('componentDidMount', qryObj);\n        this.setState(\n          { message: qryObj.data.message, groupAllExpenses: qryObj.data.groupAllExpenses },\n          // () => console.log('ReportBills - this.state:', this.state)\n        );\n      })\n      .catch((error) => console.log('erro ReportBills', error));\n    }\n  }\n\n  componentDidMount() {\n    groups\n      .getBills(this.props.groupId) //props do Id do grupo;\n      .then((qryObj) => {\n        console.log('componentDidMount', qryObj);\n        this.setState(\n          { message: qryObj.data.message, groupAllExpenses: qryObj.data.groupAllExpenses },\n          // () => console.log('ReportBills - this.state:', this.state)\n        );\n      })\n      .catch((error) => console.log('erro ReportBills', error));\n  }\n\n  render() {\n    if (this.state.groupAllExpenses) {\n      //Conditional return\n      return (\n        <div>\n          <p>Todos os gastos do grupo:</p>\n\n          <div className=\"resultTable table-responsive-md\">\n            <table className=\"table table3 table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Integrante</th>\n                  <th scope=\"col\">Descrição</th>\n                  <th scope=\"col\">Valor</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* Map que recebe os registros da API e cria uma row de tabela - vide exemplo abaixo */}\n                {this.state.groupAllExpenses.map((qry, idx) => {\n                  return (\n                    <tr key={idx}>\n                      <td>{qry.split.paidBy}</td>\n                      <td>{qry.description}</td>\n                      <td>{qry.value}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <br />\n          <hr />\n          <br />\n        </div>\n      );\n    } else {\n      //Conditional return FALSE\n      return (\n        <div>\n          <h1>Carregando...</h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ReportsBills;\n","import React, { Component } from 'react';\nimport { groups } from '../../util/api'; // Groups component from API service\n\nclass ReportsSettle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '', groupAllSettles: [] };\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.groupId !== prevProps.groupId) {\n    groups\n      .getSettles(this.props.groupId) //props do Id do grupo;\n      .then((qryObj) => {\n        // console.log('ReportsSettle - componentDidUpdate - qryObj', qryObj);\n        this.setState(\n          { message: qryObj.data.message, groupAllSettles: qryObj.data.groupAllSettles },\n          () => console.log('ReportsSettle - componentDidUpdate - this.state:', this.state)\n        );\n      })\n      .catch((error) => console.log('ERRO ReportBills - componentDidUpdate: ', error));\n    }\n  }\n\n  componentDidMount() {\n    groups\n      .getSettles(this.props.groupId) //props do Id do grupo;\n      .then((qryObj) => {\n        console.log('ReportBills - componentDidMount - this.state', qryObj);\n        this.setState(\n          { message: qryObj.data.message, groupAllSettles: qryObj.data.groupAllSettles },\n          () => console.log('ReportBills - componentDidMount - this.state:', this.state)\n        );\n      })\n      .catch((error) => console.log('ERRO ReportBills - componentDidMount - this.state', error));\n  }\n\n  render() {\n    if (this.state.groupAllSettles) {\n      //Conditional return\n      return (\n        <div>\n          <p>Pagamentos a serem realizados:</p>\n{/*             \"_id\": \"5e3c401e67966a77c0fb599d\",\n            \"owner\": \"5e39a5dcd92dfc45cc871308\",\n            \"paidBy\": \"Batman\",\n            \"paidTo\": \"WonderWoman\",\n            \"value\": 10,\n            \"__v\": 0 */}\n\n\n          <div className=\"resultTable table-responsive-md\">\n            <table className=\"table table3 table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Integrante</th>\n                  <th scope=\"col\">Pago por</th>\n                  <th scope=\"col\">Pagou para</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* Map que recebe os registros da API e cria uma row de tabela - vide exemplo abaixo */}\n                {this.state.groupAllSettles.map((qry, idx) => {\n                  return (\n                    <tr key={idx}>\n                      <td>{qry.member}</td>\n                      <td>{qry.paidBy}</td>\n                      <td>{qry.paidTo}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <br />\n          <hr />\n          <br />\n        </div>\n      );\n    } else {\n      //Conditional return FALSE\n      return (\n        <div>\n          <h1>Carregando...</h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ReportsSettle;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReportsSummary from '../ReportsSummary/ReportsSummary';\nimport ReportsBills from '../ReportsBills/ReportsBills';\nimport ReportsSettle from '../ReportsSettle/ReportsSettle';\n\nconst Reports = (props) => {\n  const { id: paramId } = props.match.params;\n  return (\n    <div>\n      <div>\n        <h1> Resumo dos acertos </h1>\n        <div>\n          <ReportsSettle groupId={paramId} />\n        </div>\n\n        <hr />\n\n        <h1> Relatório individual </h1>\n        <div>\n          <ReportsSummary groupId={paramId} />\n        </div>\n\n        <hr />\n\n        <h1> Todas as contas </h1>\n        <div>\n          <ReportsBills groupId={paramId} />\n        </div>\n      </div>\n      <p>\n        <Link\n          className=\"\"\n          data-toggle=\"collapse\"\n          to=\"/\"\n          role=\"button\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseExample\"\n        >\n          Crie seu próprio grupo!\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Reports;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { auth } from '../../util/api';\nimport { groups } from '../../util/api';\n// Components\nimport Index from '../Index/Index'; // isso precisa morrer\nimport Navbar from '../Navbar/Navbar';\n\nimport Login from '../Login/Login';\nimport Signup from '../Signup/Signup';\n\nimport Dashboard from '../Dashboard/Dashboard';\n\nimport Pessoas from '../DashPessoas/DashPessoas';\nimport Despesas from '../DashDespesas/DashDespesas';\nimport Acertos from '../DashAcertos/DashAcertos';\nimport DeleteModal from '../Modal/DeleteModal';\nimport EditModal from '../Modal/EditModal';\nimport PrivateRoute from '../PrivateRoute/PrivateRoute';\nimport Reports from '../Reports/Reports';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isAuth: false,\n      groups: [],\n      selectedGroup: {},\n    };\n    this.addExpense = this.addExpense.bind(this);\n    this.addSettle = this.addSettle.bind(this);\n    this.renderModalDelete = this.renderModalDelete.bind(this); //TODOS OS DELETES ESTAO AQUI\n    this.getUser = this.getUser.bind(this);\n    this.fetchGroups = this.fetchGroups.bind(this);\n    this.getSelectedGroup = this.getSelectedGroup.bind(this);\n    this.getGroups = this.getGroups.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGroups();\n  }\n\n  async fetchUser() {\n    if (this.state.isAuth === false) {\n      try {\n        const loggedInUser = await auth.isAuth();\n        this.setState({\n          user: loggedInUser,\n          isAuth: true,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  getUser(userObj) {\n    if (userObj === null) {\n      this.setState({\n        user: null,\n        isAuth: false,\n      });\n    } else {\n      this.setState({\n        user: userObj,\n        isAuth: true,\n      });\n    }\n  }\n\n  getSelectedGroup(groupObj) {\n    if (groupObj === null) {\n      this.setState({\n        selectedGroup: null,\n      });\n    } else {\n      this.setState({\n        selectedGroup: groupObj,\n      });\n    }\n  }\n\n  async fetchGroups() {\n    if (this.state.groups.length === 0) {\n      try {\n        const response = await groups.getAll();\n        const { status, data } = response;\n        if (status !== 200) {\n          console.log('Erro api', data);\n        } else {\n          this.setState({\n            groups: data,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  getGroups(groups) {\n    if (groups === null) {\n      this.setState({\n        groups: [],\n      });\n    } else {\n      this.setState({\n        groups,\n      });\n    }\n  }\n\n  createGroup(newGroup) {\n    this.state.groups.push(newGroup);\n  }\n\n  deleteOneElement = (elementID) => {\n    //TODO deletar por ID ou ... name se for o caso do members\n    // const index = this.state.selectedGroup.members.indexOf(memberID);\n    // if (index > -1) {\n    //   this.state.selectedGroup.members.splice(index, 1);\n    // } return message = \"Can not find ID Member\";\n  };\n  renderModalEdit = (element, thisPage) => (\n    <EditModal\n      element={element}\n      iAmInThisPage={thisPage}\n      editGroup={\n        (this.editGroup = (idOfGroupToEdit, newInfo) => {\n          groups.put(idOfGroupToEdit, newInfo);\n          console.log('ESSE É O ID DO GRUPO PARA EDITAR', idOfGroupToEdit);\n          console.log('ESSA SAO AS INFORMAÇÕES DO GRUPO PARA EDITAR', newInfo);\n        })\n      }\n    />\n  );\n  renderModalDelete = (midleText, element, thisPage) => (\n    <DeleteModal\n      midleText={midleText}\n      element={element}\n      iAmInThisPage={thisPage}\n      removeGroup={\n        (this.removeGroup = (idOfGroupToRemove) => {\n          // console.log('ESSE É O ID DO GRUPO PARA REMOVER', idOfGroupToRemove);\n          groups.delete(idOfGroupToRemove);\n        })\n      }\n      removeMember={\n        (this.removeMember = (memberToRemove) => {\n          console.log('ESSE É O MEMBRO PARA REMOVER', memberToRemove);\n          const groupCopy = { ...this.state.selectedGroup };\n          console.log(groupCopy);\n          const membersArr = groupCopy.members;\n          membersArr.splice(membersArr.indexOf(memberToRemove), 1);\n          groupCopy.members = membersArr;\n          groups.put(this.state.selectedGroup._id, groupCopy);\n        })\n      }\n      removeExpense={\n        (this.removeExpense = (expenseInfo) => {\n          const { _id, group, description, value, split } = expenseInfo;\n          groups.deleteExpense(group, _id);\n        })\n      }\n      removeSettle={\n        (this.removeSettle = (settleToRemove) => {\n          const { _id, group, value, paidBy, paidTo } = settleToRemove;\n          groups.deleteSettle(group, _id);\n        })\n      }\n    />\n  );\n\n  addGroup = (newGroup) => {\n    console.log('ESSAS SÃO AS INFORMAÇÕES DO NOVO GRUPO', newGroup);\n    // const groupCopy = { ...this.state.selectedGroup };\n    // groupCopy.Groups.push(newGroup);\n\n    // this.setState({\n    //   selectedGroup: groupCopy,\n    // });\n  };\n\n  addExpense = (newExpense) => {\n    const { group, description, value, split } = newExpense;\n    groups.createExpense(group, { description, value, split });\n  };\n\n  editExpense = (idOfExpenseToEdit, newInfo) => {\n    const { group, description, value, split } = newInfo;\n    groups.putExpense(group, idOfExpenseToEdit, { description, value, split });\n  };\n\n  editSettle = (idOfSettleToEdit, newInfo) => {\n    const { group, value, paidBy, paidTo } = newInfo;\n    groups.putSettle(group, idOfSettleToEdit, { value, paidBy, paidTo });\n  };\n\n  addSettle = (newSettle) => {\n    const { group, value, paidBy, paidTo } = newSettle;\n    groups.createSettle(group, { value, paidBy, paidTo });\n  };\n\n  render() {\n    this.fetchUser();\n    // this.fetchGroups();\n    return (\n      <div className=\"App\">\n        <Navbar\n          getSelectedGroup={this.getSelectedGroup}\n          userInSession={this.state.user}\n          getUser={this.getUser}\n          authed={this.state.isAuth}\n          groups={this.state.groups}\n          addGroup={this.addGroup}\n        />\n        {this.state.isAuth ? (\n          <Switch>\n            <Route\n              exact\n              path=\"/groups/:id/reports\"\n              render={(props) => {\n                return (\n                  <Reports\n                    // data={this.state}\n                    {...props}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => {\n                return (\n                  <Login\n                    getUser={this.getUser}\n                    getGroups={this.getGroups}\n                    {...props}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={(props) => {\n                return <Signup getUser={this.getUser} {...props} />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Index getUser={this.getUser} />}\n            />\n            <Route\n              exact\n              path=\"/groups\"\n              render={(props) => {\n                return (\n                  <Dashboard\n                    getSelectedGroup={this.getSelectedGroup}\n                    data={this.state}\n                    renderModalDelete={this.renderModalDelete}\n                    renderModalEdit={this.renderModalEdit}\n                    {...props}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/groups/:id/pessoas\"\n              render={(props) => {\n                return (\n                  <Pessoas\n                    {...props}\n                    getSelectedGroup={this.getSelectedGroup}\n                    selectedGroup={this.state.selectedGroup}\n                    renderModalDelete={this.renderModalDelete}\n                    renderModalEdit={this.renderModalEdit}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/groups/:id/despesas\"\n              render={(props) => {\n                return (\n                  <Despesas\n                    {...props}\n                    oneGroup={this.state.selectedGroup}\n                    renderModalDelete={this.renderModalDelete}\n                    editExpense={this.editExpense}\n                    addExpense={this.addExpense}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/groups/:id/acertos\"\n              render={(props) => {\n                return (\n                  <Acertos\n                    {...props}\n                    oneGroup={this.state.selectedGroup}\n                    renderModalDelete={this.renderModalDelete}\n                    addSettle={this.addSettle}\n                    editSettle={this.editSettle}\n                  />\n                );\n              }}\n            />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              user={this.state.user}\n              render={(props) => (\n                <Login\n                  getUser={this.getUser}\n                  getGroups={this.getGroups}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              user={this.state.user}\n              render={(props) => <Signup getUser={this.getUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/\"\n              user={this.state.user}\n              render={(props) => <Index getUser={this.getUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/groups/:id/reports\"\n              render={(props) => {\n                return (\n                  <Reports\n                    // data={this.state}\n                    {...props}\n                  />\n                );\n              }}\n            />\n            {/* <PrivateRoute\n              exact\n              path=\"/dashboard\"\n              authed={this.state.isAuth}\n              component={Dashboard}\n              data={this.state}\n            /> */}\n\n            <PrivateRoute\n              exact\n              path=\"/groups\"\n              authed={this.state.isAuth}\n              component={Dashboard}\n              data={this.state}\n            />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from '../src/Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}